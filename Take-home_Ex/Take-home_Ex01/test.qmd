---
title: "test"
format: html
---


::: panel-tabset
## Load packages

| name | purpose |
|----------------------|--------------------------------------------------|
| `scales` | Nicely formats axis ticks and legends. |
| `ggrepel` | Adds non‑overlapping text labels to ggplots. |
| `patchwork` | Combines multiple ggplots into a single figure. |
| `ggthemes` | Supplies predefined aesthetic themes. |
| `hrbrthemes` | Extends ggthemes with modern, typographically friendly themes and font support. |
| `tidyverse` | Meta‑package that loads ggplot2, dplyr, tidyr, readr, stringr, forcats, etc. — the backbone for data import, transformation, and visualisation. |
| `tidytext` | Tokenises and analyses text. |
| `treemapify` | Creates ggplot‑compatible treemaps. |
| `dplyr` | Provides a fast, consistent, and intuitive set of functions for data manipulation, including filtering, selecting, grouping, summarising, and joining data frames. |

```{r}
pacman::p_load(scales, ggrepel, patchwork, 
               ggthemes, hrbrthemes,tidyverse, 
               tidytext,treemapify, dplyr, gghalves) 
```

## Import data

The code imports the dataset `respopagesex2024.csv` and load the CSV file into a dataframe named `population_data`.

After import, the `mutate()` function is applied to convert the `Age` column from character to numeric format.

```{r}
population_data <- read_csv("data/respopagesex2024.csv") %>%
  mutate(Age = as.numeric(Age))
```

## Data overview

 `glimpse()` function provides a concise overview of the dataset’s structure, displaying column names, data types, and sample values.

```{r}
glimpse(population_data)
```
:::

# Original visualization

The original visualization is from my classmate Tai Qiuyan. Please click on this [**link**](https://isss608-ay2025-qiuyan.netlify.app/takehome_ex/takehome_ex01/takehome_ex01) to view her original visualization report or obtain more information.

```{r}
glimpse(population_data)
```


```{r}

violin_data <- population_data %>%
  mutate(Age = as.numeric(Age)) %>%
  filter(!is.na(Age), !is.na(PA)) %>%
  group_by(PA, Age) %>%
  summarise(Pop = sum(Pop), .groups = "drop") %>%
  uncount(weights = Pop)

top10_PAs <- population_data %>%
  group_by(PA) %>%
  summarise(Total_Pop = sum(Pop), .groups = "drop") %>%
  arrange(desc(Total_Pop)) %>%
  slice_head(n = 10) %>%
  pull(PA)

violin_filtered <- violin_data %>%
  filter(PA %in% top10_PAs) %>%
  mutate(PA = factor(PA, levels = top10_PAs))

violin_gender_split <- population_data %>%
  filter(PA %in% top10_PAs) %>%
  mutate(Age = as.numeric(Age)) %>%
  filter(!is.na(Sex), !is.na(Age)) %>%
  group_by(PA, Sex, Age) %>%
  summarise(Pop = sum(Pop), .groups = "drop") %>%
  uncount(weights = Pop) %>%
  mutate(
    Sex = factor(Sex, levels = c("Females", "Males")),
    PA = factor(PA, levels = top10_PAs)
  )

top20_PAs <- population_data %>%
  group_by(PA) %>%
  summarise(Total_Pop = sum(Pop), .groups = "drop") %>%
  arrange(desc(Total_Pop)) %>%
  slice_head(n = 20) %>%
  pull(PA)

pa_summary20 <- violin_data %>%
  filter(PA %in% top20_PAs) %>%
  mutate(AgeGroup = if_else(Age > 65, "Elderly", "Other")) %>%
  group_by(PA) %>%
  summarise(
    Avg_Age      = mean(Age),
    Total_Pop    = n(),
    Elderly_Prop = mean(AgeGroup == "Elderly"),
    .groups      = "drop"
  )

```


```{r fig.height=16, fig.width=14}
max_pop <- max(pa_summary20$Total_Pop)

pb <- ggplot(pa_summary20, aes(x = PA)) +
  geom_col(aes(y = Total_Pop), fill = "skyblue", width = 0.6) +
  geom_line(aes(y = Avg_Age * max_pop / max(pa_summary20$Avg_Age), group = 1), color = "tomato", size = 0.5) +
  geom_point(aes(y = Avg_Age * max_pop / max(pa_summary20$Avg_Age), fill = Elderly_Prop),
             shape = 21, size = 5, stroke = 0.4, color = "black", alpha = 0.8) +
  scale_fill_gradient(low = "lightblue", high = "darkred", name = "Elderly Rate", labels = percent) +
  scale_y_continuous(
    name = "Total Population",
    labels = comma,
    sec.axis = sec_axis(~ . * max(pa_summary20$Avg_Age) / max_pop, name = "Average Age")
  ) +
  labs(
    title = "Population, Average Age (line), and Elderly Rate (dot color)",
    x = "Planning Area"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.y.right = element_text(color = "tomato"),
    legend.position = c(0.85, 1.05),
    legend.direction = "horizontal",
    legend.justification = c("right", "top"),
    legend.key.width = unit(1.2, "cm"),
    legend.key.height = unit(0.4, "cm"),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    plot.margin = margin(20, 20, 20, 20)
  )
#新2
offset <- 0.15

pa <- ggplot(violin_gender_split, aes(x = PA, y = Age, fill = Sex)) +
  geom_half_violin(data = subset(violin_gender_split, Sex == "Males"),
                   side = "l", alpha = 0.6, trim = FALSE, color = NA, width = 1.2) +
  geom_half_violin(data = subset(violin_gender_split, Sex == "Females"),
                   side = "r", alpha = 0.6, trim = FALSE, color = NA, width = 1.2) +
  geom_boxplot(data = subset(violin_gender_split, Sex == "Males"),
               width = 0.15, outlier.shape = NA, alpha = 0.7,
               position = position_nudge(x = -offset), color = "black") +
  geom_boxplot(data = subset(violin_gender_split, Sex == "Females"),
               width = 0.15, outlier.shape = NA, alpha = 0.7,
               position = position_nudge(x = offset), color = "black") +
  stat_summary(data = subset(violin_gender_split, Sex == "Males"),
               fun = median, geom = "text",
               aes(label = round(..y.., 0)),
               position = position_nudge(x = -offset),
               vjust = -1.2, size = 3.5, color = "black") +
  stat_summary(data = subset(violin_gender_split, Sex == "Females"),
               fun = median, geom = "text",
               aes(label = round(..y.., 0)),
               position = position_nudge(x = offset),
               vjust = -1.2, size = 3.5, color = "black") +
  scale_fill_manual(values = c("Males" = "#87CEFA", "Females" = "#FFB6C1")) +
  geom_hline(yintercept = 65, linetype = "dashed", color = "darkred", linewidth = 0.6) +
  labs(
    title = "Sex-Split Age Distribution by Planning Area",
    subtitle = "Left = Males | Right = Females | Dashed line = Age 65",
    x = "Planning Area",
    y = "Resident Age (Years)",
    fill = "Sex"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title = element_text(size = 16),
    plot.title = element_text(size = 18, face = "bold"),
    plot.subtitle = element_text(size = 13),
    legend.position = "top"
  )
(pb / pa) + plot_layout(heights = c(1, 0.6))

```




```{r fig.height=16, fig.width=14}
#改1

library(RColorBrewer)
library(grid)

# ✅ Set3 调色板统一地区颜色（20个地区）
area_colors_all <- colorRampPalette(
  RColorBrewer::brewer.pal(10, "Set3")
)(20)
names(area_colors_all) <- top20_PAs

# ✅ 绘图主程序
p5 <- ggplot(pa_summary20, aes(
  x = Total_Pop,
  y = Avg_Age,
  size = Elderly_Prop
)) +

  # ✅ 彩色泡泡，使用 Set3 手动指定颜色
  geom_point(
    fill = area_colors_all[pa_summary20$PA],  # 手动按地区上色
    shape = 21,
    stroke = 0.6,
    alpha = 0.85,
    color = "black",
    show.legend = TRUE  # 只显示 size 图例
  ) +

  # ✅ Serangoon 引导线 + 定向偏移
  geom_text_repel(
    data = subset(pa_summary20, PA == "Serangoon"),
    aes(label = PA),
    size = 4,
    box.padding = 0.5,
    point.padding = 0.6,
    segment.color = "black",
    segment.size = 0.6,
    min.segment.length = 0,
    force = 4,
    nudge_y = 0.5,
    nudge_x = 10000
  ) +

  # ✅ 其他区域标签，不显示引导线
  geom_text_repel(
    data = subset(pa_summary20, PA != "Serangoon"),
    aes(label = PA),
    size = 4,
    box.padding = 0.5,
    point.padding = 0.5,
    segment.alpha = 0,
    force = 3,
    nudge_y = -0.65
  ) +

  # ✅ 气泡大小表示老龄化率
  scale_size_continuous(
    name = "Elderly Proportion",
    range = c(6, 20),
    labels = percent_format(accuracy = 1)
  ) +

  # ✅ 添加参考线：平均总人口 & 平均年龄
  geom_vline(xintercept = mean(pa_summary20$Total_Pop), linetype = "dotted", color = "grey50") +
  geom_hline(yintercept = mean(pa_summary20$Avg_Age), linetype = "dotted", color = "grey50") +

  # ✅ 坐标轴格式美化
  scale_x_continuous(labels = comma) +

  # ✅ 标题与标签
  labs(
    title = "Bubble Chart: Total Population vs. Average Age",
    subtitle = "Bubble = Elderly Rate | Fill = Set3 Color Palette | Dashed lines = Mean",
    x = "Total Population",
    y = "Average Age"
  ) +

  # ✅ 图表主题 + 图例设置
  theme_minimal(base_size = 14) +
  theme(
    legend.position = c(0.82, 1.05),         # 图上方右侧
    legend.direction = "horizontal",
    legend.justification = c("right", "top"),
    legend.key.size = unit(0.8, "lines"),    # 缩小图例泡泡
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 16),
    plot.title = element_text(size = 18, face = "bold"),
    plot.subtitle = element_text(size = 13),
    plot.margin = margin(20, 20, 20, 20)
  )

# ✅ 输出图形

p5


#改2
pd <- ggplot(violin_filtered, aes(x = PA, y = Age, fill = PA)) +

  # 小提琴图
  geom_violin(trim = FALSE, scale = "area", width = 0.8, alpha = 0.7) +

  # 中间 boxplot 更宽，更粗线条
  geom_boxplot(width = 0.2, outlier.shape = NA, color = "black", linewidth = 0.6) +

  # 添加中位数标签
  stat_summary(fun = median, geom = "text", 
               aes(label = round(..y.., 0)), 
               color = "black", size = 3.5, vjust = -1.5) +

  # 加一条65岁的老龄参考线
  geom_hline(yintercept = 65, linetype = "dashed", color = "darkred", linewidth = 0.6) +scale_fill_brewer(palette = "Pastel1") +

  # y轴显示更完整，步长更合理
  scale_y_continuous(
    limits = c(0, 100),
    breaks = seq(0, 100, by = 10)
  ) +

  labs(
    title = "Age Distribution Across Top 10 Residential Planning Areas (2024)",
    subtitle = "Black number: Median Age | Dashed line: Age 65 (Elderly Threshold)",
    x = "Planning Area",
    y = "Resident Age (Years)"
  ) +

  theme_minimal(base_size = 14) +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title = element_text(size = 16),
    plot.title = element_text(face = "bold", size = 18),
    plot.subtitle = element_text(size = 13, margin = margin(b = 10))
  )

(p5 / pd) + plot_layout(heights = c(1, 0.6))
```

