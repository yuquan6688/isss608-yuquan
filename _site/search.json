[
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "Go to Tableau Public"
  },
  {
    "objectID": "all-posts.html",
    "href": "all-posts.html",
    "title": "all-posts",
    "section": "",
    "text": "Take-home_Ex03\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHand-on Exercise 6 — Visualising and Analysing Time-oriented Data\n\n\n\nLi Yuquan\n\n\nMay 18, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 5–MC1 Kickstarter\n\n\n\nLi Yuquan\n\n\nMay 17, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R\n\n\n\nLi Yuquan\n\n\nMay 11, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 2\n\n\n\nLi Yuquan\n\n\nMay 11, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on_Ex04c—Visualising Uncertainty\n\n\n\nLi Yuquan\n\n\nMay 5, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on_Ex04b—Visual Statistical Analysis\n\n\n\nLi Yuquan\n\n\nMay 5, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on_Ex04a—Visualising Distribution\n\n\n\nLi Yuquan\n\n\nMay 5, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on_Ex04d— Funnel Plots for Fair Comparisons\n\n\n\nLi Yuquan\n\n\nMay 5, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 1–Phase 2\n\n\n\nLi Yuquan\n\n\nApr 30, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home Exercise 1\n\n\n\nLi Yuquan\n\n\nApr 30, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHands-on_Ex04d— Visualising Models\n\n\n\nLi Yuquan\n\n\nMay 5, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 3\n\n\n\nLi Yuquan\n\n\nMay 3, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHand-on Exercise 3b — Programming Animated Statistical Graphics with R\n\n\n\nLi Yuquan\n\n\nApr 29, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHand-on Exercise 3a — Programming Interactive Data Visualisation with R\n\n\n\nLi Yuquan\n\n\nApr 28, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 2\n\n\n\nLi Yuquan\n\n\nApr 26, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHand-on Exercise 2 — Beyond ggplot2 Fundamentals\n\n\n\nLi Yuquan\n\n\nApr 22, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods\n\n\n\nLi Yuquan\n\n\nApr 9, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html",
    "title": "Take-home Exercise 1–Phase 2",
    "section": "",
    "text": "For the second phase of Take-home Exercise 1, we are required to critically review a data visualization submitted by one of our classmates. This involves identifying and explaining three effective design principles demonstrated in their work, as well as highlighting three areas for potential improvement. Based on this critique, we are expected to develop a revised or “makeover” version of their visualization that addresses the identified weaknesses while preserving the original message and intent.\nIn this part, I will conduct a critical analysis of the visualization submitted by my classmate Tai Qiuyan, discussing three strengths in design and proposing improvements to enhance clarity, effectiveness, and visual communication."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#data-cleaning-and-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#data-cleaning-and-preparation",
    "title": "Take-home Exercise 1–Phase 2",
    "section": "3.1 Data cleaning and preparation",
    "text": "3.1 Data cleaning and preparation\n\n\n\n\n\n\nTip\n\n\n\nAll data import, data processing, and variable naming in the original visualisation strictly follow the code submitted by the classmate.\n\n\n\nviolin_data &lt;- population_data %&gt;%\n  mutate(Age = as.numeric(Age)) %&gt;%\n  filter(!is.na(Age), !is.na(PA)) %&gt;%\n  group_by(PA, Age) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  uncount(weights = Pop)\n\ntop10_PAs &lt;- population_data %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Total_Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  arrange(desc(Total_Pop)) %&gt;%\n  slice_head(n = 10) %&gt;%\n  pull(PA)\n\nviolin_filtered &lt;- violin_data %&gt;%\n  filter(PA %in% top10_PAs) %&gt;%\n  mutate(PA = factor(PA, levels = top10_PAs))\n\n\ntop20_PAs &lt;- population_data %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Total_Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  arrange(desc(Total_Pop)) %&gt;%\n  slice_head(n = 20) %&gt;%\n  pull(PA)\n\npa_summary20 &lt;- violin_data %&gt;%\n  filter(PA %in% top20_PAs) %&gt;%\n  mutate(AgeGroup = if_else(Age &gt; 65, \"Elderly\", \"Other\")) %&gt;%\n  group_by(PA) %&gt;%\n  summarise(\n    Avg_Age      = mean(Age),\n    Total_Pop    = n(),\n    Elderly_Prop = mean(AgeGroup == \"Elderly\"),\n    .groups      = \"drop\"\n  )"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#visualization",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#visualization",
    "title": "Take-home Exercise 1–Phase 2",
    "section": "3.2 Visualization",
    "text": "3.2 Visualization\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# palette for all 20 PAs\narea_colors_all &lt;- colorRampPalette(\n  RColorBrewer::brewer.pal(10, \"Set3\")\n)(20)\nnames(area_colors_all) &lt;- top20_PAs\n\n# Violin plot\np1 &lt;- ggplot(violin_filtered, aes(x = PA, y = Age, fill = PA)) +\n  geom_violin(trim = FALSE, scale = \"area\", width = 0.8, alpha = 0.7) +\n  geom_boxplot(width = 0.1, outlier.shape = NA, color = \"black\") +\n  scale_fill_manual(values = area_colors_all[top10_PAs]) +\n  labs(\n    title = \"Age Distribution by Planning Area (Top 10 Residential Areas)\",\n    x     = \"Planning Area\",\n    y     = \"Age\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",\n    axis.text.x     = element_text(angle = 45, hjust = 1),\n    axis.title      = element_text(size = 16),\n    plot.title      = element_text(face = \"bold\", size = 18)\n  )\n\n# Scatter plot\np2 &lt;- ggplot(pa_summary20, aes(\n      x = Total_Pop,\n      y = Avg_Age,\n      size = Elderly_Prop,\n      fill = PA\n    )) +\n  geom_point(shape = 21, alpha = 0.8, color = \"black\") +\n  geom_text_repel(aes(label = PA), size = 4, max.overlaps = 30) +\n  \n  scale_fill_manual(values = area_colors_all, guide = FALSE) +\n  scale_size_continuous(\n    name  = \"Elderly Proportion\",\n    range = c(6, 20)\n  ) +\n  scale_x_continuous(labels = scales::comma) +\n  labs(\n    title = \"Average Age vs. Total Population (Top 20 Planning Areas)\",\n    x     = \"Total Population\",\n    y     = \"Average Age\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"right\",\n    legend.title    = element_text(size = 14),\n    legend.text     = element_text(size = 12),\n    axis.title      = element_text(size = 16),\n    plot.title      = element_text(face = \"bold\", size = 18)\n  )\n\n# combine\n(p2 / p1) + plot_layout(heights = c(1, 0.6))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#good-design-principles",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#good-design-principles",
    "title": "Take-home Exercise 1–Phase 2",
    "section": "4.1 Good design principles",
    "text": "4.1 Good design principles\n\nThis visualization effectively integrates total population, average age, and elderly proportion into a single bubble chart, enabling users to compare the scale and aging level of multiple planning areas at a glance through a multidimensional view.\nThe use of consistent and vibrant color schemes across both charts ensures that the same planning areas are easily recognizable, enhancing readability and supporting a visually coherent interpretation across different visual elements.\nThe two charts complement each other: the upper bubble chart provides a macro-level overview of population characteristics, while the lower violin plot reveals detailed age distribution patterns, together offering a more comprehensive and in-depth understanding of demographic structures."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#further-improvement",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#further-improvement",
    "title": "Take-home Exercise 1–Phase 2",
    "section": "4.2 Further improvement",
    "text": "4.2 Further improvement\n\nThe y-axis of the violin plot lacks a clear label indicating that it represents age, and the wide scale range (0–75) without finer graduations makes it difficult for viewers to interpret the exact distribution. Adding a descriptive axis title and refining the scale would improve clarity.\nIn the bubble chart, some labels—such as those for Geylang and Serangoon—overlap with the bubbles or appear too densely packed, reducing legibility. This could be improved by repositioning the labels or abbreviating long area names to avoid visual clutter.\nThe violin plot does not include median lines or reference markers such as the age of 65, making it harder to quickly identify central tendencies or distinguish age structure differences across areas. Including such markers and enlarging the box plots would enhance interpretability.\nThe legend for the bubble chart is positioned too close to the bottom chart, disrupting the overall layout balance and drawing attention away from the data. Relocating the legend to the upper-right empty space and resizing it appropriately would create a more harmonious and visually balanced design."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#makeover-version",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01b.html#makeover-version",
    "title": "Take-home Exercise 1–Phase 2",
    "section": "4.3 Makeover version",
    "text": "4.3 Makeover version\n\n4.3.1 Data Prepare\n\nThe DescriptionThe Code\n\n\n\nThe population_data was preprocessed specifically for violin plot visualization, aiming to generate age distribution data grouped by gender, in order to show the age structure of different genders across the top 10 most populous planning areas.\nThis line converts the PA variable in the pa_summary20 data frame into an ordered factor, following the population-based ranking specified in top20_PAs, to ensure that the x-axis in the subsequent plot displays planning areas sorted by population size.\n\n\n\n\nviolin_gender_split &lt;- population_data %&gt;%\n  filter(PA %in% top10_PAs) %&gt;%\n  mutate(Age = as.numeric(Age)) %&gt;%\n  filter(!is.na(Sex), !is.na(Age)) %&gt;%\n  group_by(PA, Sex, Age) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  uncount(weights = Pop) %&gt;%\n  mutate(\n    Sex = factor(Sex, levels = c(\"Females\", \"Males\")),\n    PA = factor(PA, levels = top10_PAs)\n  )\n\npa_summary20$PA &lt;- factor(pa_summary20$PA, levels = top20_PAs)\n\n\n\n\n\n\n4.3.2 Markover Version 1\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\narea_colors_all &lt;- colorRampPalette(RColorBrewer::brewer.pal(10, \"Set3\"))(20)\nnames(area_colors_all) &lt;- top20_PAs\n\np5 &lt;- ggplot(pa_summary20, aes(x = Total_Pop, \n                               y = Avg_Age, \n                               size = Elderly_Prop)) +\n  geom_point(\n    fill = area_colors_all[pa_summary20$PA],\n    shape = 21,\n    stroke = 0.6,\n    alpha = 0.85,\n    color = \"black\",\n    show.legend = TRUE\n  ) +\n  geom_text_repel(\n    data = subset(pa_summary20, \n                  PA == \"Serangoon\"),\n    aes(label = PA),\n    size = 4,\n    box.padding = 0.5,\n    point.padding = 0.6,\n    segment.color = \"black\",\n    segment.size = 0.6,\n    min.segment.length = 0,\n    force = 4,\n    nudge_y = 0.5,\n    nudge_x = 10000\n  ) +\n  geom_text_repel(\n    data = subset(pa_summary20, \n                  PA != \"Serangoon\"),\n    aes(label = PA),\n    size = 4,\n    box.padding = 0.5,\n    point.padding = 0.5,\n    segment.alpha = 0,\n    force = 3,\n    nudge_y = -0.65\n  ) +\n  scale_size_continuous(\n    name = \"Elderly Proportion\",\n    range = c(6, 20),\n    labels = percent_format(accuracy = 1)\n  ) +\n  geom_vline(xintercept = mean(pa_summary20$Total_Pop), linetype = \"dotted\", color = \"grey50\") +\n  geom_hline(yintercept = mean(pa_summary20$Avg_Age), \n             linetype = \"dotted\", \n             color = \"grey50\") +\n  scale_x_continuous(labels = comma) +\n  labs(\n    title = \"Bubble Chart: Total Population vs. Average Age\",\n    subtitle = \"Bubble = Elderly Rate | Fill = Set3 Color Palette | Dashed lines = Mean\",\n    x = \"Total Population\",\n    y = \"Average Age\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = c(0.82, 1.05),\n    legend.direction = \"horizontal\",\n    legend.justification = c(\"right\", \"top\"),\n    legend.key.size = unit(0.8, \"lines\"),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10),\n    axis.title = element_text(size = 16),\n    plot.title = element_text(size = 18, face = \"bold\"),\n    plot.subtitle = element_text(size = 13),\n    plot.margin = margin(20, 20, 20, 20)\n  )\n\n\npd &lt;- ggplot(violin_filtered, aes(x = PA, \n                                  y = Age, \n                                  fill = PA)) +\n  geom_violin(trim = FALSE, \n              scale = \"area\", \n              width = 0.8, \n              alpha = 0.7) +\n  geom_boxplot(width = 0.2, \n               outlier.shape = NA, \n               color = \"black\", \n               linewidth = 0.6) +\n  stat_summary(\n    fun = median,\n    geom = \"text\",\n    aes(label = round(..y.., 0)),\n    color = \"black\",\n    size = 3.5,\n    vjust = -1.5\n  ) +\n  geom_hline(yintercept = 65, \n             linetype = \"dashed\", \n             color = \"darkred\", \n             linewidth = 0.6) +\n  scale_fill_brewer(palette = \"Pastel1\") +\n  scale_y_continuous(\n    limits = c(0, 100),\n    breaks = seq(0, 100, by = 10)\n  ) +\n  labs(\n    title = \"Age Distribution Across Top 10 Residential Planning Areas (2024)\",\n    subtitle = \"Black number: Median Age | Dashed line: Age 65 (Elderly Threshold)\",\n    x = \"Planning Area\",\n    y = \"Resident Age (Years)\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",\n    axis.text.x = element_text(angle = 45, \n                               hjust = 1),\n    axis.title = element_text(size = 16),\n    plot.title = element_text(face = \"bold\", \n                              size = 18),\n    plot.subtitle = element_text(size = 13, \n                                 margin = margin(b = 10))\n  )\n\n(p5 / pd) + plot_layout(heights = c(1, 0.6))\n\n\n\n\n\n\n\n\n\n\nChanges\n\n\n\nBubble Chart\n\nAdjusted the position of area labels to be closer to the corresponding bubbles and added guiding lines for specific densely packed areas.\nMoved the legend from the right side to the top of the chart to create a more balanced and visually coordinated layout.\n\nViolin Plot\n\nAdded dashed reference lines to represent average values (mean age and total population), enhancing comparative analysis.\nIncluded numerical labels for median values within the boxplots.\nEnlarged the boxplot elements for better visibility and clarity.\nRevised the y-axis scale to range from 0 to 100, changing the tick intervals from 25 to 10 years for improved granularity.\n\n\n\n\n\n4.3.3 Markover Version 2\nAfter making improvements to the original visualization in the Markover Version 1 section, I believe there are still some methods that can achieve better visualization results by changing the original chart type.\nTherefore, while retaining the modified parts of the Markover Version 1 section, I made the following second version improvements.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmax_pop &lt;- max(pa_summary20$Total_Pop)\n\npb &lt;- ggplot(pa_summary20, aes(x = PA)) +\n  geom_col(aes(y = Total_Pop), fill = \"skyblue\", \n           width = 0.6) +\n  geom_line(aes(y = Avg_Age * max_pop / max(pa_summary20$Avg_Age), \n                group = 1), \n            color = \"tomato\", \n            size = 0.5) +\n  geom_point(aes(y = Avg_Age * max_pop / max(pa_summary20$Avg_Age), \n                 fill = Elderly_Prop),\n             shape = 21, size = 5, \n             stroke = 0.4, \n             color = \"black\", \n             alpha = 0.8) +\n  scale_fill_gradient(low = \"lightblue\", \n                      high = \"darkred\", \n                      name = \"Elderly Rate\", \n                      labels = percent) +\n  scale_y_continuous(\n    name = \"Total Population\",\n    labels = comma,\n    sec.axis = sec_axis(~ . * max(pa_summary20$Avg_Age) / max_pop, \n                        name = \"Average Age\")\n  ) +\n  labs(\n    title = \"Population, Average Age (line), and Elderly Rate (dot color)\",\n    x = \"Planning Area\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.title.y.right = element_text(color = \"tomato\"),\n    legend.position = c(0.85, 1.05),\n    legend.direction = \"horizontal\",\n    legend.justification = c(\"right\", \"top\"),\n    legend.key.width = unit(1.2, \"cm\"),\n    legend.key.height = unit(0.4, \"cm\"),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10),\n    plot.margin = margin(20, 20, 20, 20)\n  )\n\n\noffset &lt;- 0.15\n\npa &lt;- ggplot(violin_gender_split, aes(x = PA, \n                                      y = Age, \n                                      fill = Sex)) +\n  geom_half_violin(data = subset(violin_gender_split, \n                                 Sex == \"Males\"),\n                   side = \"l\", \n                   alpha = 0.6, \n                   trim = FALSE, \n                   color = NA, \n                   width = 1.2) +\n  geom_half_violin(data = subset(violin_gender_split, \n                                 Sex == \"Females\"),\n                   side = \"r\", \n                   alpha = 0.6, \n                   trim = FALSE, \n                   color = NA, \n                   width = 1.2) +\n  geom_boxplot(data = subset(violin_gender_split, \n                             Sex == \"Males\"),\n               width = 0.15, \n               outlier.shape = NA, \n               alpha = 0.7,\n               position = position_nudge(x = -offset), \n               color = \"black\") +\n  geom_boxplot(data = subset(violin_gender_split,\n                             Sex == \"Females\"),\n               width = 0.15, outlier.shape = NA, \n               alpha = 0.7,\n               position = position_nudge(x = offset), \n               color = \"black\") +\n  stat_summary(data = subset(violin_gender_split, \n                             Sex == \"Males\"),\n               fun = median, \n               geom = \"text\",\n               aes(label = round(..y.., 0)),\n               position = position_nudge(x = -offset),\n               vjust = -1.2, size = 3.5, \n               color = \"black\") +\n  stat_summary(data = subset(violin_gender_split, \n                             Sex == \"Females\"),\n               fun = median, \n               geom = \"text\",\n               aes(label = round(..y.., 0)),\n               position = position_nudge(x = offset),\n               vjust = -1.2, \n               size = 3.5, \n               color = \"black\") +\n  scale_fill_manual(values = c(\"Males\" = \"#87CEFA\", \n                               \"Females\" = \"#FFB6C1\")) +\n  geom_hline(yintercept = 65, \n             linetype = \"dashed\", \n             color = \"darkred\", \n             linewidth = 0.6) +\n  scale_y_continuous(\n    limits = c(0, 100),\n    breaks = seq(0, 100, by = 10)\n  ) +\n  labs(\n    title = \"Sex-Split Age Distribution by Planning Area\",\n    subtitle = \"Left = Males | Right = Females | Dashed line = Age 65\",\n    x = \"Planning Area\",\n    y = \"Resident Age (Years)\",\n    fill = \"Sex\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.title = element_text(size = 16),\n    plot.title = element_text(size = 18, face = \"bold\"),\n    plot.subtitle = element_text(size = 13),\n    legend.position = \"top\"\n  )\n(pb / pa) + plot_layout(heights = c(1, 0.6))\n\n\n\n\n\n\n\n\n\n\nChanges\n\n\n\nBubble Chart\n\nThe original bubble chart was replaced with a bar chart combined with a line chart, resulting in a clearer visual structure while still presenting the same three variables.\nInstead of using the y-axis to directly show average age, the revised chart displays it as a red line with a corresponding secondary y-axis on the right, enhancing multidimensional comparison.\nThe elderly proportion, originally represented by bubble size, is now shown through the color intensity of the dots, accompanied by a continuous color legend that improves readability and comparison.\nThe x-axis, previously loosely sorted by total population, is now explicitly arranged from the most to the least populous planning area—from Tampines to Queenstown—making the visualisation more structured and interpretable.\n\nViolin Plot\n\nA gender dimension was added to the violin plot, making the visualisation more comprehensive and clearer by revealing differences in age distribution between males and females."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics & Applications",
    "section": "",
    "text": "Welcome to Yuquan’s Visual Analytics Website!\nHere, you’ll find all the coursework I’ve completed for the ISSS608 Visual Analytics and Applications course, including Hands-on Exercises, In-Class Exercises, Take-home Exercises, and the Group Project.\nThis website is a space where I document my learning journey, practice data visualization skills, and share project work throughout the course. Feel free to explore and see how my visual analytics adventure unfolds!\n\n\n\n\n\n\n  \n    Last Post\n    \n      (You can see all the assignments through this link)\n    \n  \n\n\n  \n    🔔 NEW (4/05) – \n    Hands-on Exercise 4a and \n     Hands-on Exercise 4b and\n      Hands-on Exercise 4c and\n     Hands-on Exercise 4d are published!\n     \n    🔔 NEW (3/05) –     \n     Take-home Exercise 1 are published!\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTake-home_Ex03\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHand-on Exercise 6 — Visualising and Analysing Time-oriented Data\n\n\n\nLi Yuquan\n\n\nMay 18, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn-class Exercise 5–MC1 Kickstarter\n\n\n\nLi Yuquan\n\n\nMay 17, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "",
    "text": "In this hands-on exercise, I learned how to model, analyse, and visualise network data using R. Specifically, I was able to:\n\ncreate graph object data frames and manipulate them using functions from packages such as dplyr, lubridate, and tidygraph,\nbuild network graph visualisations with the ggraph package,\ncompute key network metrics using tidygraph,\nenhance the visualisation by incorporating network geometric properties, and\nconstruct interactive network visualisations using the visNetwork package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#installing-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#installing-and-launching-r-packages",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "2.1 Installing and launching R packages",
    "text": "2.1 Installing and launching R packages\nIn this hands-on exercise, four network data modelling and visualisation packages will be installed and launched. They are igraph, tidygraph, ggraph and visNetwork. Beside these four packages, tidyverse and lubridate, an R package specially designed to handle and wrangling time data will be installed and launched too.\n\n\n\n\n\n\n\nname\npurpose\n\n\n\n\nigraph\nProvides fundamental data structures and algorithms for network analysis and graph theory.\n\n\ntidygraph\nOffers a tidyverse-compatible approach to graph data manipulation and analysis.\n\n\nggraph\nEnables grammar-of-graphics-based network visualisation, built on top of ggplot2.\n\n\nvisNetwork\nCreates interactive network visualisations with zoom, drag, and tooltips in HTML.\n\n\nlubridate\nSimplifies working with date and time data in R.\n\n\nclock\nProvides an alternative date-time API with greater control and clarity, useful for date-based graph analysis.\n\n\ntidyverse\nA collection of essential packages for data manipulation, analysis, and visualisation.\n\n\ngraphlayouts\nImplements various layout algorithms to improve the readability of network graphs.\n\n\nconcaveman\nComputes concave hulls (boundaries) around groups of points, useful in spatial graph visuals.\n\n\nggforce\nExtends ggplot2 with additional geometric elements and layout capabilities, including for network data.\n\n\n\n\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-data",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "2.2 The Data",
    "text": "2.2 The Data\nThe data sets used in this hands-on exercise is from an oil exploration and extraction company. There are two data sets. One contains the nodes data and the other contains the edges (also know as link) data.\n\n2.2.1 The edges data\nGAStech-email_edges.csv which consists of two weeks of 9063 emails correspondances between 55 employees.\n\n\n\n2.2.2 The nodes data\nGAStech_email_nodes.csv which consist of the names, department and title of the 55 employees.\n\n\n\n2.2.3 Importing network data from files\nIn this step, I will import GAStech_email_node.csv and GAStech_email_edges-v2.csv into RStudio environment by using read_csv() of readr package.\n\nGAStech_nodes &lt;- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n2.2.4 Reviewing the imported data\nNext, I will examine the structure of the data frame.\n\nGAStech_edgesGAStech_nodes\n\n\n\nglimpse()summaryhead()\n\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\nsummary(GAStech_edges)\n\n     source          target        SentDate            SentTime             \n Min.   : 1.00   Min.   : 1.00   Length:9063        Min.   :08:18:00.00000  \n 1st Qu.: 6.00   1st Qu.:13.00   Class :character   1st Qu.:12:57:00.00000  \n Median :23.00   Median :28.00   Mode  :character   Median :15:08:00.00000  \n Mean   :22.51   Mean   :26.44                      Mean   :14:55:39.79477  \n 3rd Qu.:36.00   3rd Qu.:39.00                      3rd Qu.:16:54:00.00000  \n Max.   :54.00   Max.   :54.00                      Max.   :22:33:00.00000  \n   Subject          MainSubject        sourceLabel        targetLabel       \n Length:9063        Length:9063        Length:9063        Length:9063       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n\n\n\n\n\nhead(GAStech_edges,100)\n\n# A tibble: 100 × 8\n   source target SentDate SentTime Subject   MainSubject sourceLabel targetLabel\n    &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;    &lt;time&gt;   &lt;chr&gt;     &lt;chr&gt;       &lt;chr&gt;       &lt;chr&gt;      \n 1     43     41 6/1/2014 08:39    GT-Seism… Work relat… Sven.Flecha Isak.Baza  \n 2     43     40 6/1/2014 08:39    GT-Seism… Work relat… Sven.Flecha Lucas.Alca…\n 3     44     51 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Felix.Resu…\n 4     44     52 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Hideki.Coc…\n 5     44     53 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Inga.Ferro \n 6     44     45 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Varja.Lagos\n 7     44     44 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Kanon.Herr…\n 8     44     46 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Stenig.Fus…\n 9     44     48 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Hennie.Osv…\n10     44     49 6/1/2014 08:58    Inspecti… Work relat… Kanon.Herr… Isia.Vann  \n# ℹ 90 more rows\n\n\n\n\n\n\n\n\nglimpse()summaryhead()\n\n\n\nglimpse(GAStech_nodes)\n\nRows: 54\nColumns: 4\n$ id         &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 44, 45, 46, 8, 9, 10, 11, 12, 13, 14, …\n$ label      &lt;chr&gt; \"Mat.Bramar\", \"Anda.Ribera\", \"Rachel.Pantanal\", \"Linda.Lago…\n$ Department &lt;chr&gt; \"Administration\", \"Administration\", \"Administration\", \"Admi…\n$ Title      &lt;chr&gt; \"Assistant to CEO\", \"Assistant to CFO\", \"Assistant to CIO\",…\n\n\n\n\n\nsummary(GAStech_nodes)\n\n       id           label            Department           Title          \n Min.   : 1.00   Length:54          Length:54          Length:54         \n 1st Qu.:14.25   Class :character   Class :character   Class :character  \n Median :27.50   Mode  :character   Mode  :character   Mode  :character  \n Mean   :27.50                                                           \n 3rd Qu.:40.75                                                           \n Max.   :54.00                                                           \n\n\n\n\n\nhead(GAStech_nodes,100)\n\n# A tibble: 54 × 4\n      id label               Department     Title                               \n   &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                               \n 1     1 Mat.Bramar          Administration Assistant to CEO                    \n 2     2 Anda.Ribera         Administration Assistant to CFO                    \n 3     3 Rachel.Pantanal     Administration Assistant to CIO                    \n 4     4 Linda.Lagos         Administration Assistant to COO                    \n 5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Mana…\n 6     6 Carla.Forluniau     Administration Assistant to IT Group Manager       \n 7     7 Cornelia.Lais       Administration Assistant to Security Group Manager \n 8    44 Kanon.Herrero       Security       Badging Office                      \n 9    45 Varja.Lagos         Security       Badging Office                      \n10    46 Stenig.Fusil        Security       Building Control                    \n# ℹ 44 more rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThe output report of GASTech_edges above reveals that the SentDate is treated as “Character” data type instead of date data type. This is an error! Before we continue, it is important for us to change the data type of SentDate field back to “Date” data type.\n\n\n\n\n2.2.5 Wrangling time\nThe code chunk below will be used to perform the changes.\n\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nboth dmy() and wday() are functions of lubridate package. lubridate is an R package that makes it easier to work with dates and times.\ndmy() transforms the SentDate to Date data type.\nwday() returns the day of the week as a decimal number or an ordered factor if label is TRUE. The argument abbr is FALSE keep the daya spells in full, i.e. Monday. The function will create a new column in the data.frame i.e. Weekday and the output of wday() will save in this newly created field.\nthe values in the Weekday field are in ordinal scale.\n\n\n\n\n\n2.2.6 Reviewing the revised date fields\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 10\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ SendDate    &lt;date&gt; 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ Weekday     &lt;ord&gt; Friday, Friday, Friday, Friday, Friday, Friday, Friday, Fr…\n\n\n\n\n2.2.7 Wrangling attributes\nA close examination of GAStech_edges data.frame reveals that it consists of individual e-mail flow records. This is not very useful for visualisation.\nIn view of this, I will aggregate the individual by date, senders, receivers, main subject and day of the week.\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nfour functions from dplyr package are used. They are: filter(), group(), summarise(), and ungroup().\nThe output data.frame is called GAStech_edges_aggregated.\nA new field called Weight has been added in GAStech_edges_aggregated.\n\n\n\n\n\n2.2.8 Reviewing the revised edges file\n\nglimpse(GAStech_edges_aggregated)\n\nRows: 1,372\nColumns: 4\n$ source  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  &lt;dbl&gt; 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6,…\n$ Weekday &lt;ord&gt; Sunday, Monday, Tuesday, Wednesday, Friday, Sunday, Monday, Tu…\n$ Weight  &lt;int&gt; 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5, 2, 3, 4, 6, 5,…"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-tbl_graph-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-tbl_graph-object",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "2.3.1 The tbl_graph object",
    "text": "2.3.1 The tbl_graph object\nTwo functions of tidygraph package can be used to create network objects, they are:\n\ntbl_graph() creates a tbl_graph network object from nodes and edges data.\nas_tbl_graph() converts network data and objects to a tbl_graph network. Below are network data and objects supported by as_tbl_graph()\n\na node data.frame and an edge data.frame,\ndata.frame, list, matrix from base,\nigraph from igraph,\nnetwork from network,\ndendrogram and hclust from stats,\nNode from data.tree,\nphylo and evonet from ape, and\ngraphNEL, graphAM, graphBAM from graph (in Bioconductor)."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-dplyr-verbs-in-tidygraph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-dplyr-verbs-in-tidygraph",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "3.2 The dplyr verbs in tidygraph",
    "text": "3.2 The dplyr verbs in tidygraph\nactivate() verb from tidygraph serves as a switch between tibbles for nodes and edges. All dplyr verbs applied to tbl_graph object are applied to the active tibble.\n\nIn the above the .N() function is used to gain access to the node data while manipulating the edge data. Similarly .E() will give you the edge data and .G() will give you the tbl_graph object itself."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "3.3 Using tbl_graph() to build tidygraph data model",
    "text": "3.3 Using tbl_graph() to build tidygraph data model\nIn this section, I will use tbl_graph() of tinygraph package to build an tidygraph’s network graph data.frame.\nBefore typing the codes, you are recommended to review to reference guide of tbl_graph()\n\nGAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-output-tidygraphs-graph-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-output-tidygraphs-graph-object",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "3.4 Reviewing the output tidygraph’s graph object",
    "text": "3.4 Reviewing the output tidygraph’s graph object\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n      id label               Department     Title                               \n   &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                               \n 1     1 Mat.Bramar          Administration Assistant to CEO                    \n 2     2 Anda.Ribera         Administration Assistant to CFO                    \n 3     3 Rachel.Pantanal     Administration Assistant to CIO                    \n 4     4 Linda.Lagos         Administration Assistant to COO                    \n 5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Mana…\n 6     6 Carla.Forluniau     Administration Assistant to IT Group Manager       \n 7     7 Cornelia.Lais       Administration Assistant to Security Group Manager \n 8    44 Kanon.Herrero       Security       Badging Office                      \n 9    45 Varja.Lagos         Security       Badging Office                      \n10    46 Stenig.Fusil        Security       Building Control                    \n# ℹ 44 more rows\n#\n# Edge Data: 1,372 × 4\n   from    to Weekday Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;    &lt;int&gt;\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-output-tidygraphs-graph-object-1",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-output-tidygraphs-graph-object-1",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "3.5 Reviewing the output tidygraph’s graph object",
    "text": "3.5 Reviewing the output tidygraph’s graph object\n\nThe output above reveals that GAStech_graph is a tbl_graph object with 54 nodes and 4541 edges.\nThe command also prints the first six rows of “Node Data” and the first three of “Edge Data”.\nIt states that the Node Data is active. The notion of an active tibble within a tbl_graph object makes it possible to manipulate the data in one tibble at a time."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "3.6 Changing the active object",
    "text": "3.6 Changing the active object\nThe nodes tibble data frame is activated by default, but we can change which tibble data frame is active with the activate() function. Thus, if we wanted to rearrange the rows in the edges tibble to list those with the highest “weight” first, we could use activate() and then arrange().\n\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,372 × 4 (active)\n    from    to Weekday   Weight\n   &lt;int&gt; &lt;int&gt; &lt;ord&gt;      &lt;int&gt;\n 1    40    41 Saturday      13\n 2    41    43 Monday        11\n 3    35    31 Tuesday       10\n 4    40    41 Monday        10\n 5    40    43 Monday        10\n 6    36    32 Sunday         9\n 7    40    43 Saturday       9\n 8    41    40 Monday         9\n 9    19    15 Wednesday      8\n10    35    38 Tuesday        8\n# ℹ 1,362 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows\n\n\nthe reference guide of activate() provide more about the function."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "4.1 Plotting a basic network graph",
    "text": "4.1 Plotting a basic network graph\nThe code chunk below uses ggraph(), geom-edge_link() and geom_node_point() to plot a network graph by using GAStech_graph. Before your get started, it is advisable to read their respective reference guide at least once.\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n\n\n\n\nExploration 1\n\nggraph(GAStech_graph) +\n  geom_edge_link(edge_colour = \"grey70\",size=0.5) +\n  geom_node_point(shape = 21,\n                  aes(fill = Department))+\ngeom_node_text(color = \"grey25\",\n                 fontface= \"bold\",\n                 size = 3,\n                 repel = TRUE,\n                 aes(label = label))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\nThe basic plotting function is ggraph(), which takes the data to be used for the graph and the type of layout desired. Both of the arguments for ggraph() are built around igraph. Therefore, ggraph() can use either an igraph object or a tbl_graph object."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "4.2 Changing the default network graph theme",
    "text": "4.2 Changing the default network graph theme\nIn this section, I will use theme_graph() to remove the x and y axes. Before your get started, it is advisable to read it’s reference guide at least once.\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\nExploration 2\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(edge_colour = \"grey75\")) +\n  geom_node_point(aes())\n\ng + theme_graph(foreground = \"grey80\",\n                border= FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nggraph introduces a special ggplot theme that provides better defaults for network graphs than the normal ggplot defaults. theme_graph(), besides removing axes, grids, and border, changes the font to Arial Narrow (this can be overridden).\nThe ggraph theme can be set for a series of plots with the set_graph_style() command run before the graphs are plotted or by using theme_graph() in the individual plots."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-coloring-of-the-plot",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-coloring-of-the-plot",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "4.3 Changing the coloring of the plot",
    "text": "4.3 Changing the coloring of the plot\nFurthermore, theme_graph() makes it easy to change the coloring of the plot.\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-ggraphs-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-ggraphs-layouts",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "4.4 Working with ggraph’s layouts",
    "text": "4.4 Working with ggraph’s layouts\nggraph support many layout for standard used, they are: star, circle, nicely (default), dh, gem, graphopt, grid, mds, spahere, randomly, fr, kk, drl and lgl. Figures below and on the right show layouts supported by ggraph()."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#fruchterman-and-reingold-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#fruchterman-and-reingold-layout",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "4.5 Fruchterman and Reingold layout",
    "text": "4.5 Fruchterman and Reingold layout\nThe code chunks below will be used to plot the network graph using Fruchterman and Reingold layout.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\nExploration 3\n\nstargridcircle\n\n\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"star\") +\n  geom_edge_link(edge_colour = \"#c7c8cc\",aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"grid\") +\n  geom_edge_link(edge_colour = \"#c7c8cc\",aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"circle\") +\n  geom_edge_link(edge_colour = \"#c7c8cc\",aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\nlayout argument is used to define the layout to be used."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "4.6 Modifying network nodes",
    "text": "4.6 Modifying network nodes\nIn this section, I will colour each node by referring to their respective departments.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(edge_colour = \"#c7c8cc\",aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\ngeom_node_point is equivalent in functionality to geo_point of ggplot2. It allows for simple plotting of nodes in different shapes, colours and sizes. In the codes chnuks above colour and size are used."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "4.7 Modifying edges",
    "text": "4.7 Modifying edges\nIn the code chunk below, the thickness of the edges will be mapped with the Weight variable.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\nExploration 4\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(alpha=0.2, colour=Weekday)) +\n  geom_node_point()\n\ng + \n  theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\ngeom_edge_link draws edges in the simplest way - as straight lines between the start and end nodes. But, it can do more that that. In the example above, argument width is used to map the width of the line in proportional to the Weight attribute and argument alpha is used to introduce opacity on the line."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "5.1 Working with facet_edges()",
    "text": "5.1 Working with facet_edges()\nIn the code chunk below, facet_edges() is used. Before getting started, it is advisable for me to read it’s reference guide at least once.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges-1",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges-1",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "5.2 Working with facet_edges()",
    "text": "5.2 Working with facet_edges()\nThe code chunk below uses theme() to change the position of the legend.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#a-framed-facet-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#a-framed-facet-graph",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "5.3 A framed facet graph",
    "text": "5.3 A framed facet graph\nThe code chunk below adds frame to each graph.\n\nset_graph_style() \n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "5.4 Working with facet_nodes()",
    "text": "5.4 Working with facet_nodes()\nIn the code chunkc below, facet_nodes() is used. Before getting started, it is advisable for you to read it’s reference guide at least once.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "6.1 Computing centrality indices",
    "text": "6.1 Computing centrality indices\nIn this exercise, I was introduced to several centrality measures, which are statistical indices used to describe how important certain actors are within a network. The four commonly used measures include degree, betweenness, closeness, and eigenvector centrality. While this hands-on session did not delve into the underlying principles or mathematical foundations of these metrics, I referred to Chapter 7: Actor Prominence of A User’s Guide to Network Analysis in R to deepen my understanding of their conceptual meaning and application.\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nmutate() of dplyr is used to perform the computation.\nthe algorithm used, on the other hand, is the centrality_betweenness() of tidygraph."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-network-metrics",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-network-metrics",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "6.2 Visualising network metrics",
    "text": "6.2 Visualising network metrics\nIt is important to note that from ggraph v2.0 onward tidygraph algorithms such as centrality measures can be accessed directly in ggraph calls. This means that it is no longer necessary to precompute and store derived node and edge centrality measures on the graph in order to use them in a plot.\n\ng &lt;- GAStech_graph %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "6.3 Visualising Community",
    "text": "6.3 Visualising Community\ntidygraph package inherits many of the community detection algorithms imbedded into igraph and makes them available to us, including Edge-betweenness (group_edge_betweenness), Leading eigenvector (group_leading_eigen), Fast-greedy (group_fast_greedy), Louvain (group_louvain), Walktrap (group_walktrap), Label propagation (group_label_prop), InfoMAP (group_infomap), Spinglass (group_spinglass), and Optimal (group_optimal). Some community algorithms are designed to take into account direction or weight, while others ignore it. Use this link to find out more about community detection functions provided by tidygraph,\nIn the code chunk below group_edge_betweenness() is used.\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(\n    group_edge_betweenness(\n      weights = Weight, \n      directed = TRUE))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(\n    aes(\n      width=Weight), \n    alpha=0.2) +\n  scale_edge_width(\n    range = c(0.1, 5)) +\n  geom_node_point(\n    aes(colour = community))  \n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\nExploration 5\n\nn_groups = 1n_groups = 9n_groups = 50\n\n\n\ngb &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(\n    group_edge_betweenness(\n      weights = Weight, \n      directed = TRUE, \n      n_groups = 1))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(\n    aes(\n      width=Weight), \n    alpha=0.2) +\n  scale_edge_width(\n    range = c(0.1, 5)) +\n  geom_node_point(\n    aes(colour = community))  \n\ngb + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\nga &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(\n    group_edge_betweenness(\n      weights = Weight, \n      directed = TRUE, \n      n_groups = 9))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(\n    aes(\n      width=Weight), \n    alpha=0.2) +\n  scale_edge_width(\n    range = c(0.1, 5)) +\n  geom_node_point(\n    aes(colour = community))  \n\nga + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\nga &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(\n    group_edge_betweenness(\n      weights = Weight, \n      directed = TRUE, \n      n_groups = 50))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(\n    aes(\n      width=Weight), \n    alpha=0.2) +\n  scale_edge_width(\n    range = c(0.1, 5)) +\n  geom_node_point(\n    aes(colour = community))  \n\nga + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\nIn order to support effective visual investigation, the community network above has been revised by using geom_mark_hull() of ggforce package.\n\n\n\n\n\n\nImportant\n\n\n\nmust to install and include ggforce and concaveman packages before running the code chunk below.\n\n\n\ng &lt;- GAStech_graph %&gt;%\n  activate(nodes) %&gt;%\n  mutate(community = as.factor(\n    group_optimal(weights = Weight)),\n         betweenness_measure = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") +\n  geom_mark_hull(\n    aes(x, y, \n        group = community, \n        fill = community),  \n    alpha = 0.2,  \n    expand = unit(0.3, \"cm\"),  # Expand\n    radius = unit(0.3, \"cm\")  # Smoothness\n  ) + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(fill = Department,\n                      size = betweenness_measure),\n                      color = \"black\",\n                      shape = 21)\n  \ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "7.1 Data preparation",
    "text": "7.1 Data preparation\nBefore we can plot the interactive network graph, we need to prepare the data model by using the code chunk below.\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %&gt;%\n  rename(from = id) %&gt;%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %&gt;%\n  rename(to = id) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(from, to) %&gt;%\n    summarise(weight = n()) %&gt;%\n  filter(from!=to) %&gt;%\n  filter(weight &gt; 1) %&gt;%\n  ungroup()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-first-interactive-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-first-interactive-network-graph",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "7.2 Plotting the first interactive network graph",
    "text": "7.2 Plotting the first interactive network graph\nThe code chunk below will be used to plot an interactive network graph by using the data prepared.\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "7.3 Working with layout",
    "text": "7.3 Working with layout\nIn the code chunk below, Fruchterman and Reingold layout is used.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") \n\n\n\n\n\nVisit Igraph to find out more about visIgraphLayout’s argument."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "7.4 Working with visual attributes - Nodes",
    "text": "7.4 Working with visual attributes - Nodes\nvisNetwork() looks for a field called “group” in the nodes object and colour the nodes according to the values of the group field.\nThe code chunk below rename Department field to group.\n\nGAStech_nodes &lt;- GAStech_nodes %&gt;%\n  rename(group = Department) \n\nWhen we rerun the code chunk below, visNetwork shades the nodes by assigning unique colour to each category in the group field.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "7.5 Working with visual attributes - Edges",
    "text": "7.5 Working with visual attributes - Edges\nIn the code run below visEdges() is used to symbolise the edges. - The argument arrows is used to define where to place the arrow. - The smooth argument is used to plot the edges using a smooth curve.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\nVisit Option to find out more about visEdges’s argument."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "title": "Hand-on Exercise 5 — Modelling, Visualising and Analysing Network Data with R",
    "section": "7.6 Interactivity",
    "text": "7.6 Interactivity\nIn the code chunk below, visOptions() is used to incorporate interactivity features in the data visualisation.\nThe argument highlightNearest highlights nearest when clicking a node. The argument nodesIdSelection adds an id node selection creating an HTML select element.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\nVisit Option to find out more about visOption’s argument."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "In this hands-on exercise, we will learn how to create interactive data visualisation by using functions provided by ggiraph and plotlyr packages."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "4.1 Tooltip effect with tooltip aesthetic",
    "text": "4.1 Tooltip effect with tooltip aesthetic\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\nNotice that two steps are involved. First, an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#displaying-multiple-information-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#displaying-multiple-information-on-tooltip",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "5.1 Displaying multiple information on tooltip",
    "text": "5.1 Displaying multiple information on tooltip\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#customising-tooltip-style",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#customising-tooltip-style",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "6.1 Customising Tooltip style",
    "text": "6.1 Customising Tooltip style\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\nThe background colour of the tooltip is black and the font colour is white and bold."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#displaying-statistics-on-tooltip",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "6.2 Displaying statistics on tooltip",
    "text": "6.2 Displaying statistics on tooltip\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#hover-effect-with-data_id-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#hover-effect-with-data_id-aesthetic",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "6.3 Hover effect with data_id aesthetic",
    "text": "6.3 Hover effect with data_id aesthetic\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nThe default value of the hover css is hover_css = “fill:orange;”."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#styling-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#styling-hover-effect",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "6.4 Styling hover effect",
    "text": "6.4 Styling hover effect\nIn the code chunk below, css codes are used to change the highlighting effect.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote: Different from previous example, in this example the ccs customisation request are encoded directly."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#combining-tooltip-and-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#combining-tooltip-and-hover-effect",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "6.5 Combining tooltip and hover effect",
    "text": "6.5 Combining tooltip and hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\nThere are times that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\nElements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#click-effect-with-onclick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#click-effect-with-onclick",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "6.6 Click effect with onclick",
    "text": "6.6 Click effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\nInteractivity: Web document link with a data object will be displayed on the web browser upon mouse click.\n\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nNote that click actions must be a string column in the dataset containing valid javascript instructions."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "6.7 Coordinated Multiple Views with ggiraph",
    "text": "6.7 Coordinated Multiple Views with ggiraph\nCoordinated multiple views methods has been implemented in the data visualisation below.\n\n\n\n\n\n\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "7.1 Creating an interactive scatter plot: plot_ly() method",
    "text": "7.1 Creating an interactive scatter plot: plot_ly() method\nThe tabset below shows an example a basic interactive plot created by using plot_ly().\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data-Exam_data,\n        x= ~MATHS\n        y= ~ENGLISH)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#working-with-visual-variable-plot_ly-method",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "7.2 Working with visual variable: plot_ly() method",
    "text": "7.2 Working with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nThe PlotThe Code\n\n\n\nplot_ly(data=exam_data,\n        x= ~MATHS,\n        y= ~ENGLISH,\n        color= ~RACE)\n\n\n\n\n\n\n\n\nplot_ly(data=exam_data,\n        x= ~MATHS,\n        y= ~ENGLISH,\n        color= ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "7.3 Creating an interactive scatter plot: ggplotly() method",
    "text": "7.3 Creating an interactive scatter plot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#coordinated-multiple-views-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#coordinated-multiple-views-with-plotly",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "7.4 Coordinated Multiple Views with plotly",
    "text": "7.4 Coordinated Multiple Views with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n-highlight_key() of plotly package is used as shared data.\n-two scatterplots will be created by using ggplot2 functions.\n-subplot() of plotly package is used to place them next to each other side-by-side.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d,\n             aes(x = MATHS,\n                 y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d,\n             aes(x = MATHS,\n                 y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\nhighlight_key() simply creates an object of class crosstalk::SharedData."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-table-dt-package",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "8.1 Interactive Data Table: DT package",
    "text": "8.1 Interactive Data Table: DT package\n-A wrapper of the JavaScript Library DataTables\n-Data objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#linked-brushing-crosstalk-method",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "8.2 Linked brushing: crosstalk method",
    "text": "8.2 Linked brushing: crosstalk method\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode chunk below is used to implement the coordinated brushing shown above.\n\nd &lt;- highlight_key(exam_data)\np &lt;- ggplot(d,\n            aes(ENGLISH,\n                MATHS)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),\n                \"plotly_selected\")\n\ncrosstalk::bscols(gg,\n                  DT::datatable(d),\n                  widths = 5)\n\n-highlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\n-bscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#select-student-id",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#select-student-id",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "9.1 Select Student ID",
    "text": "9.1 Select Student ID\n\nlibrary(crosstalk)\nlibrary(htmltools)\n\nd &lt;- highlight_key(exam_data)\n\np &lt;- ggplot(d, aes(ENGLISH, MATHS)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p), \"plotly_selected\")\n\nfilter_widget &lt;- div(style = \"width:200px;\",\n                     filter_select(\n                       id = \"id_selector\",\n                       label = \"Select Student ID:\",\n                       sharedData = d,\n                       group = ~ID\n                     ))\n\ncrosstalk::bscols(\n  tagList(filter_widget, gg),\n  DT::datatable(d, options = list(scrollX = TRUE)),\n  widths = 10\n)\n\n\n\n\n\n\nSelect Student ID:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#scatterplot-with-marginal-histogram",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#scatterplot-with-marginal-histogram",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "9.2 Scatterplot with marginal histogram",
    "text": "9.2 Scatterplot with marginal histogram\n\nlibrary(ggplot2)\nlibrary(ggExtra)\np &lt;- ggplot(data = exam_data, aes(x = SCIENCE, y = MATHS)) +\n  geom_point(alpha = 0.5, color = \"steelblue\") +\n  labs(title = \"Science vs. Maths\",\n       x = \"Science\",\n       y = \"Maths\") +\n  theme_minimal()\nggMarginal(p, type = \"histogram\", fill = \"steelblue\", alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#marginal-histogram",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#marginal-histogram",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "9.3 Marginal Histogram",
    "text": "9.3 Marginal Histogram\n\navg_scores &lt;- exam_data %&gt;%\n  group_by(CLASS) %&gt;%\n  summarise(\n    ENGLISH = mean(ENGLISH, na.rm = TRUE),\n    MATHS = mean(MATHS, na.rm = TRUE),\n    SCIENCE = mean(SCIENCE, na.rm = TRUE)\n  )\n\navg_scores_long &lt;- avg_scores %&gt;%\n  pivot_longer(cols = c(ENGLISH, MATHS, SCIENCE),\n               names_to = \"Subject\",\n               values_to = \"AverageScore\")\n\nggplot(avg_scores_long, aes(x = Subject, y = CLASS, fill = AverageScore)) +\n  geom_tile(color = \"white\") +\n  geom_text(aes(label = round(AverageScore, 1)), color = \"white\", size = 3) +\n  scale_fill_gradient(low = \"#deebf7\", high = \"#3182bd\") +\n  labs(title = \"Average Scores per Subject by Class\", x = \"\", y = \"Class\") +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#ggiraph",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "10.1 ggiraph",
    "text": "10.1 ggiraph\nThis link provides online version of the reference guide and several useful articles. Use this link to download the pdf version of the reference guide.\n\nHow to Plot With Ggiraph\nInteractive map of France with ggiraph\nCustom interactive sunbursts with ggplot in R\nThis link provides code example on how ggiraph is used to interactive graphs for Swiss Olympians - the solo specialists."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#plotly-for-r",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#plotly-for-r",
    "title": "Hand-on Exercise 3a — Programming Interactive Data Visualisation with R",
    "section": "10.2 plotly for R",
    "text": "10.2 plotly for R\n\nGetting Started with Plotly in R\nA collection of plotly R graphs are available via this link.\nCarson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link\nPlotly R Figure Reference provides a comprehensive discussion of each visual representations.\nPlotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API.\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html",
    "title": "Hands-on_Ex04d— Visualising Models",
    "section": "",
    "text": "In this section, we will learn how to visualise model diagnostic and model parameters by using parameters package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#the-case",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#the-case",
    "title": "Hands-on_Ex04d— Visualising Models",
    "section": "2.1 The case",
    "text": "2.1 The case\nToyota Corolla case study will be used. The purpose of study is to build a model to discover factors affecting prices of used-cars by taking into consideration a set of explanatory variables."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#multiple-regression-model-using-lm",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#multiple-regression-model-using-lm",
    "title": "Hands-on_Ex04d— Visualising Models",
    "section": "3.1 Multiple Regression Model using lm()",
    "text": "3.1 Multiple Regression Model using lm()\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#model-diagnostic-checking-for-multicolinearity",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#model-diagnostic-checking-for-multicolinearity",
    "title": "Hands-on_Ex04d— Visualising Models",
    "section": "3.2 Model Diagnostic: checking for multicolinearity:",
    "text": "3.2 Model Diagnostic: checking for multicolinearity:\nIn the code chunk, check_collinearity() of performance package.\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#model-diagnostic-checking-normality-assumption",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#model-diagnostic-checking-normality-assumption",
    "title": "Hands-on_Ex04d— Visualising Models",
    "section": "3.3 Model Diagnostic: checking normality assumption",
    "text": "3.3 Model Diagnostic: checking normality assumption\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n &lt;- check_normality(model1)\n\n\nplot(check_n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "Hands-on_Ex04d— Visualising Models",
    "section": "3.4 Model Diagnostic: Check model for homogeneity of variances",
    "text": "3.4 Model Diagnostic: Check model for homogeneity of variances\nIn the code chunk, check_heteroscedasticity() of performance package.\n\ncheck_h &lt;- check_heteroscedasticity(model1)\n\n\nplot(check_h)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#model-diagnostic-complete-check",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#model-diagnostic-complete-check",
    "title": "Hands-on_Ex04d— Visualising Models",
    "section": "3.5 Model Diagnostic: Complete check",
    "text": "3.5 Model Diagnostic: Complete check\nWe can also perform the complete by using check_model().\n\ncheck_model(model1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#visualising-regression-parameters-see-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#visualising-regression-parameters-see-methods",
    "title": "Hands-on_Ex04d— Visualising Models",
    "section": "3.6 Visualising Regression Parameters: see methods",
    "text": "3.6 Visualising Regression Parameters: see methods\nIn the code below, plot() of see package and parameters() of parameters package is used to visualise the parameters of a regression model.\n\n# plot(parameters(model1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#visualising-regression-parameters-ggcoefstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04-toyota.html#visualising-regression-parameters-ggcoefstats-methods",
    "title": "Hands-on_Ex04d— Visualising Models",
    "section": "3.7 Visualising Regression Parameters: ggcoefstats() methods",
    "text": "3.7 Visualising Regression Parameters: ggcoefstats() methods\nIn the code below, ggcoefstats() of ggstatsplot package to visualise the parameters of a regression model.\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html",
    "title": "Hands-on_Ex04a—Visualising Distribution",
    "section": "",
    "text": "While traditional methods such as histograms, probability density curves, boxplots, and violin plots are commonly used for visualizing distributions—as introduced in Chapter 1—this analysis also incorporates more recent visualization techniques. Specifically, ridgeline plots and raincloud plots are employed in this study using ggplot2 and its extensions to provide a more nuanced understanding of population distribution patterns."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#plotting-ridgeline-graph-ggridges-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#plotting-ridgeline-graph-ggridges-method",
    "title": "Hands-on_Ex04a—Visualising Distribution",
    "section": "3.1 Plotting ridgeline graph: ggridges method",
    "text": "3.1 Plotting ridgeline graph: ggridges method\nThere are several ways to plot ridgeline plot with R. In this section, we will plot ridgeline plot by using ggridges package.\nggridges package provides two main geom to plot gridgeline plots, they are: geom_ridgeline() and geom_density_ridges(). The former takes height values directly to draw the ridgelines, and the latter first estimates data densities and then draws those using ridgelines.\nThe ridgeline plot below is plotted by using geom_density_ridges().\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH,\n           y = CLASS)) +\n  geom_density_ridges(scale=3,\n                      rel_min_height = 0.01,\n                      bandwidth = 3.4,\n                      fill = lighten(\"#7097BB\",.3),\n                      color = \"white\") +\n  scale_x_continuous(name = \"English grades\",\n                     expand = c(0,0)) +\n  scale_y_discrete(name = NULL, \n                   expand = expansion(add = c(0.2,2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#varying-fill-colors-along-the-x-axis",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#varying-fill-colors-along-the-x-axis",
    "title": "Hands-on_Ex04a—Visualising Distribution",
    "section": "3.2 Varying fill colors along the x axis",
    "text": "3.2 Varying fill colors along the x axis\nSometimes we would like to have the area under a ridgeline not filled with a single solid color but rather with colors that vary in some form along the x axis. This effect can be achieved by using either geom_ridgeline_gradient() or geom_density_ridges_gradient(). Both geoms work just like geom_ridgeline() and geom_density_ridges(), except that they allow for varying fill colors. However, they do not allow for alpha transparency in the fill. For technical reasons, we can have changing fill colors or transparency but not both.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH,\n           y = CLASS,\n           fill =stat(x)))+\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01\n  )+\n  scale_fill_viridis_c(name = \"Temp.[F]\",\n                       option = \"C\") +\n  scale_x_continuous( name = \"English grades\",\n                      expand = c(0,0)) +\n  scale_y_discrete(name = NULL, \n                   expand = expansion(add= c(0.2,2.6)))+\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#mapping-the-probabilities-directly-onto-colour",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#mapping-the-probabilities-directly-onto-colour",
    "title": "Hands-on_Ex04a—Visualising Distribution",
    "section": "3.3 Mapping the probabilities directly onto colour",
    "text": "3.3 Mapping the probabilities directly onto colour\nBeside providing additional geom objects to support the need to plot ridgeline plot, ggridges package also provides a stat function called stat_density_ridges() that replaces stat_density() of ggplot2.\nFigure below is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of English score.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIt is important include the argument calc_ecdf = TRUE in stat_density_ridges()."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#ridgeline-plots-with-quantile-lines",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#ridgeline-plots-with-quantile-lines",
    "title": "Hands-on_Ex04a—Visualising Distribution",
    "section": "3.4 Ridgeline plots with quantile lines",
    "text": "3.4 Ridgeline plots with quantile lines\nBy using geom_density_ridges_gradient(), we can colour the ridgeline plot by quantile, via the calculated stat(quantile) aesthetic as shown in the figure below.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n        aes(x = ENGLISH,\n            y = CLASS,\n            fill = factor(stat(quantile)))) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\nInstead of using number to define the quantiles, we can also specify quantiles by cut points such as 2.5% and 97.5% tails to colour the ridgeline plot as shown in the figure below.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#plotting-a-half-eye-graph",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#plotting-a-half-eye-graph",
    "title": "Hands-on_Ex04a—Visualising Distribution",
    "section": "4.1 Plotting a Half Eye graph",
    "text": "4.1 Plotting a Half Eye graph\nFirst, we will plot a Half-Eye graph by using stat_halfeye() of ggdist package.\nThis produces a Half Eye visualization, which is contains a half-density and a slab-interval.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes( x = RACE,\n            y= ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\ntips\n\n\n\nWe remove the slab interval by setting .width = 0 and point_colour = NA."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#adding-the-boxplot-with-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#adding-the-boxplot-with-geom_boxplot",
    "title": "Hands-on_Ex04a—Visualising Distribution",
    "section": "4.2 Adding the boxplot with geom_boxplot() ",
    "text": "4.2 Adding the boxplot with geom_boxplot() \nNext, we will add the second geometry layer using geom_boxplot() of ggplot2. This produces a narrow boxplot. We reduce the width and adjust the opacity.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes( x = RACE,\n            y= ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#adding-the-dot-plots-with-stat_dots",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#adding-the-dot-plots-with-stat_dots",
    "title": "Hands-on_Ex04a—Visualising Distribution",
    "section": "4.3 Adding the Dot Plots with stat_dots() ",
    "text": "4.3 Adding the Dot Plots with stat_dots() \nNext, we will add the third geometry layer using stat_dots() of ggdist package. This produces a half-dotplot, which is similar to a histogram that indicates the number of samples (number of dots) in each bin. We select side = “left” to indicate we want it on the left-hand side.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes( x = RACE,\n            y= ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\",\n            justification = 1.2,\n            binwidth = .5,\n            dotsize = 2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#finishing-touch",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#finishing-touch",
    "title": "Hands-on_Ex04a—Visualising Distribution",
    "section": "4.4 Finishing touch",
    "text": "4.4 Finishing touch\nLastly, coord_flip() of ggplot2 package will be used to flip the raincloud chart horizontally to give it the raincloud appearance. At the same time, theme_economist() of ggthemes package is used to give the raincloud chart a professional publishing standard look.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes( x = RACE,\n            y= ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\",\n            justification = 1.2,\n            binwidth = .5,\n            dotsize = 2) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#ridges-with-jittered-points",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#ridges-with-jittered-points",
    "title": "Hands-on_Ex04a—Visualising Distribution",
    "section": "5.1 Ridges with jittered points",
    "text": "5.1 Ridges with jittered points\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = RACE,\n       color= RACE,\n       fill= RACE)) +\n  theme_ridges()+\n  geom_density_ridges(jittered_points=TRUE,\n                      aes(point_color=RACE),\n                      alpha = 0.7,\n                      scale = 0.8,\n                      point_size = .5,\n                      ) +\n  scale_fill_discrete_qualitative('Set 3')+\n  scale_color_discrete_qualitative('Dark 3')+\n\n\n  labs(x = \"English Score\",\n       y = \"\",\n       title=\"Distribution of English Scores by Ethnic Group\") +  \n  theme(\n    legend.position = \"none\",\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = element_text(hjust = 1),\n    plot.title = element_text(face = \"bold\", size = 10),\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#shaped-jitters-with-geom_density_ridges",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04a.html#shaped-jitters-with-geom_density_ridges",
    "title": "Hands-on_Ex04a—Visualising Distribution",
    "section": "5.2 shaped jitters with geom_density_ridges()",
    "text": "5.2 shaped jitters with geom_density_ridges()\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = RACE, \n           color=RACE, \n           fill=RACE\n           )) +\n  theme_ridges()+\n  geom_density_ridges(jittered_points=TRUE,\n                      position='raincloud',\n                      alpha = 0.7,\n                      scale=1,\n                      point_shape = '|',\n                      point_size = 2,\n                      ) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  scale_color_nord('victory_bonds')+\n  scale_fill_nord('victory_bonds')+\n  scale_color_brewer(palette = \"Set1\") +\nscale_fill_brewer(palette = \"Set1\") +\n  labs(x = \"English Score\",\n       y = \"\",\n       title=\"Distribution of English Scores by Ethnicity\") +\n  theme(\n    legend.position = \"none\",\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = element_text(hjust = 1),\n    plot.title = element_text(face = \"bold\", size = 10),\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html",
    "title": "Hands-on_Ex04c—Visualising Uncertainty",
    "section": "",
    "text": "Visualising uncertainty is relatively new in statistical graphics. In this chapter, we will gain hands-on experience on creating statistical graphics for visualising uncertainty. By the end of this chapter we will be able:\n\nto plot statistics error bars by using ggplot2,\nto plot interactive error bars by combining ggplot2, plotly and DT,\nto create advanced by using ggdist, and\nto create hypothetical outcome plots (HOPs) by using ungeviz package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hands-on_Ex04c—Visualising Uncertainty",
    "section": "3.1 Plotting standard error bars of point estimates",
    "text": "3.1 Plotting standard error bars of point estimates\nNow we are ready to plot the standard error bars of mean maths score by race as shown below.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nThe error bars are computed by using the formula mean ± se.\n\nFor geom_point(), it is important to indicate stat = \"identity\"."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hands-on_Ex04c—Visualising Uncertainty",
    "section": "3.2 Plotting confidence interval of point estimates",
    "text": "3.2 Plotting confidence interval of point estimates\nInstead of plotting the standard error bar of point estimates, we can also plot the confidence intervals of mean maths score by race.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nThe confidence intervals are computed by using the formula mean ± 1.96 × se.\n\nThe error bars are sorted by using the average maths scores.\n\nlabs() argument of ggplot2 is used to change the x-axis label."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-on_Ex04c—Visualising Uncertainty",
    "section": "3.3 Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "3.3 Visualizing the uncertainty of point estimates with interactive error bars\nIn this section, we will learn how to plot interactive error bars for the 99% confidence interval of mean maths score by race as shown in the figure below.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-on_Ex04c—Visualising Uncertainty",
    "section": "4.1 Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "4.1 Visualizing the uncertainty of point estimates: ggdist methods\nIn the code chunk below, stat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis function comes with many arguments, students are advised to read the syntax reference for more detail.\n\n\nFor example, in the code chunk below the following arguments are used:\n\n.width = 0.95\n.point = median\n.interval = qi\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-1",
    "title": "Hands-on_Ex04c—Visualising Uncertainty",
    "section": "4.2 Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "4.2 Visualizing the uncertainty of point estimates: ggdist methods\n\nCI=1CI=0.95CI=0.99\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(.width = 1,\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(.width = 0.99,\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods-2",
    "title": "Hands-on_Ex04c—Visualising Uncertainty",
    "section": "4.3 Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "4.3 Visualizing the uncertainty of point estimates: ggdist methods\nIn the code chunk below, stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#installing-ungeviz-package",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#installing-ungeviz-package",
    "title": "Hands-on_Ex04c—Visualising Uncertainty",
    "section": "5.1 Installing ungeviz package",
    "text": "5.1 Installing ungeviz package\n\ndevtools::install_github(\"wilkelab/ungeviz\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#launch-the-application-in-r",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#launch-the-application-in-r",
    "title": "Hands-on_Ex04c—Visualising Uncertainty",
    "section": "5.2 Launch the application in R",
    "text": "5.2 Launch the application in R\n\nlibrary(ungeviz)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04c.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "title": "Hands-on_Ex04c—Visualising Uncertainty",
    "section": "5.3 Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "5.3 Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\nNext, the code chunk below will be used to build the HOPs.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html",
    "title": "Hands-on_Ex04b—Visual Statistical Analysis",
    "section": "",
    "text": "In this hands-on exercise, we will gain hands-on experience on using:\n\nggstatsplot package to create visual graphics with rich statistical information,\nperformance package to visualise model diagnostics, and\nparameters package to visualise model parameters"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#one-sample-test-gghistostats-method",
    "title": "Hands-on_Ex04b—Visual Statistical Analysis",
    "section": "4.1 One-sample test: gghistostats() method",
    "text": "4.1 One-sample test: gghistostats() method\nIn the code chunk below, gghistostats() is used to to build an visual of one-sample test on English scores.\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#unpacking-the-bayes-factor",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#unpacking-the-bayes-factor",
    "title": "Hands-on_Ex04b—Visual Statistical Analysis",
    "section": "4.2 Unpacking the Bayes Factor",
    "text": "4.2 Unpacking the Bayes Factor\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\nThat’s because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.\nWhen we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10. It can be defined mathematically as\n\n\nThe Schwarz criterion is one of the easiest ways to calculate rough approximation of the Bayes Factor."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#how-to-interpret-bayes-factor",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#how-to-interpret-bayes-factor",
    "title": "Hands-on_Ex04b—Visual Statistical Analysis",
    "section": "4.3 How to interpret Bayes Factor",
    "text": "4.3 How to interpret Bayes Factor\nA Bayes Factor can be any positive number. One of the most common interpretations is this one—first proposed by Harold Jeffereys (1961) and slightly modified by Lee and Wagenmakers in 2013:"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on_Ex04b—Visual Statistical Analysis",
    "section": "4.4 Two-sample mean test: ggbetweenstats()",
    "text": "4.4 Two-sample mean test: ggbetweenstats()\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.\n\nggbetweenstats(data = exam,\n               x = GENDER,\n               y = MATHS,\n               type = \"r\", # robust statistical test（稳健统计检验）\n               messages = FALSE)\n\n\n\n\n\n\n\n\n\nggbetweenstats(data = exam,\n               x = GENDER,\n               y = MATHS,\n               type = \"p\", # parametric test（参数检验）\n               messages = FALSE)\n\n\n\n\n\n\n\n\n\nggbetweenstats(data = exam,\n               x = GENDER,\n               y = MATHS,\n               type = \"np\", #non-parametric\n               messages = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on_Ex04b—Visual Statistical Analysis",
    "section": "4.5  Oneway ANOVA Test: ggbetweenstats() method",
    "text": "4.5  Oneway ANOVA Test: ggbetweenstats() method\nIn the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on English score by race.\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n“ns” → only non-significant\n“s” → only significant\n“all” → everything\n\n\n4.5.1 ggbetweenstats - Summary of tests"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on_Ex04b—Visual Statistical Analysis",
    "section": "4.6 Significant Test of Correlation: ggscatterstats()",
    "text": "4.6 Significant Test of Correlation: ggscatterstats()\nIn the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(data = exam,\n               x = MATHS,\n               y = ENGLISH,\n               marginal = FALSE,\n               )\n\n\n\n\n\n\n\n\n\nggscatterstats(data = exam,\n               x = MATHS,\n               y = ENGLISH,\n               marginal = TRUE,\n               )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on_Ex04b—Visual Statistical Analysis",
    "section": "4.7 Significant Test of Association (Depedence) : ggbarstats() methods",
    "text": "4.7 Significant Test of Association (Depedence) : ggbarstats() methods\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using cut().\n\nexam1 &lt;- exam %&gt;%\n  mutate(MATHS_bins =\n           cut(MATHS,\n               breaks = c(0,60,75,85,100)))\n\nIn this code chunk below ggbarstats() is used to build a visual for Significant Test of Association\n\nggbarstats(exam1,\n           x = MATHS_bins,\n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#ggwithinstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#ggwithinstats",
    "title": "Hands-on_Ex04b—Visual Statistical Analysis",
    "section": "5.1 ggwithinstats()",
    "text": "5.1 ggwithinstats()\nIn the code chunk below, [ggwithinstats()] is used to create a paired comparison visual between students’ English and Maths scores. This method transforms the data into long format and performs a non-parametric statistical test to determine whether there is a significant difference between the two subjects.\n\nexam2 &lt;- exam %&gt;%\n  pivot_longer(cols = c(ENGLISH, MATHS),\n               names_to = \"Subject\",\n               values_to = \"Score\")\n\nggwithinstats(\n  data = exam2,\n  x = Subject,\n  y = Score,\n  paired = TRUE,\n  type = \"np\"\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#ggpiestats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#ggpiestats",
    "title": "Hands-on_Ex04b—Visual Statistical Analysis",
    "section": "5.2 ggpiestats()",
    "text": "5.2 ggpiestats()\nIn the code chunk below, [ggpiestats()] is applied to examine the association between gender and Maths passing status (Pass/Fail). The function generates a pie chart annotated with statistical test results (e.g., chi-squared test), allowing for an intuitive understanding of categorical variable relationships.\n\nexam3 &lt;- exam %&gt;%\n  mutate(MATHS_PASS = if_else(MATHS &gt;= 50, \"Pass\", \"Fail\"))\n\nggpiestats(data = exam3, x = GENDER, y = MATHS_PASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#ggcorrmat",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04b.html#ggcorrmat",
    "title": "Hands-on_Ex04b—Visual Statistical Analysis",
    "section": "5.3 ggcorrmat()",
    "text": "5.3 ggcorrmat()\nIn the code chunk below, [ggcorrmat()] is used to display a correlation matrix among English, Maths, and Science scores. This function computes pairwise correlation coefficients (Pearson’s method in this case) and visualizes them in a heatmap with embedded significance markers for each pair.\n\nggcorrmat(data = exam,\n          cor.vars = c(ENGLISH, MATHS, SCIENCE),\n          type = \"p\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html",
    "title": "Hands-on_Ex04d— Funnel Plots for Fair Comparisons",
    "section": "",
    "text": "Funnel plot is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities. By the end of this hands-on exercise, you will gain hands-on experience on:\n\nplotting funnel plots by using funnelPlotR package,\nplotting static funnel plot by using ggplot2 package, and\nplotting interactive funnel plot by using both plotly R and ggplot2 packages."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#funnelplotr-methods-the-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#funnelplotr-methods-the-basic-plot",
    "title": "Hands-on_Ex04d— Funnel Plots for Fair Comparisons",
    "section": "3.1 FunnelPlotR methods: The basic plot",
    "text": "3.1 FunnelPlotR methods: The basic plot\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \nThings to learn from the code chunk above.\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_typeargument is “SR”.\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#funnelplotr-methods-makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#funnelplotr-methods-makeover-2",
    "title": "Hands-on_Ex04d— Funnel Plots for Fair Comparisons",
    "section": "3.3 FunnelPlotR methods: Makeover 2",
    "text": "3.3 FunnelPlotR methods: Makeover 2\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  x_range = c(0, 6500),  \n  y_range = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative \\n Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n) \n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \nThings to learn from the code chunk above.\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#computing-the-basic-derived-fields",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#computing-the-basic-derived-fields",
    "title": "Hands-on_Ex04d— Funnel Plots for Fair Comparisons",
    "section": "4.1 Computing the basic derived fields",
    "text": "4.1 Computing the basic derived fields\nTo plot the funnel plot from scratch, we need to derive cumulative death rate and standard error of cumulative death rate.\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nNext, the fit.mean is computed by using the code chunk below.\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-on_Ex04d— Funnel Plots for Fair Comparisons",
    "section": "4.2 Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "4.2 Calculate lower and upper limits for 95% and 99.9% CI\nThe code chunk below is used to compute the lower and upper limits for 95% confidence interval.\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#plotting-a-static-funnel-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#plotting-a-static-funnel-plot",
    "title": "Hands-on_Ex04d— Funnel Plots for Fair Comparisons",
    "section": "4.3 Plotting a static funnel plot",
    "text": "4.3 Plotting a static funnel plot\nIn the code chunk below, ggplot2 functions are used to plot a static funnel plot.\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-on_Ex04d— Funnel Plots for Fair Comparisons",
    "section": "4.4 Interactive Funnel Plot: plotly + ggplot2",
    "text": "4.4 Interactive Funnel Plot: plotly + ggplot2\nThe funnel plot created using ggplot2 functions can be made interactive with ggplotly()of plotly r package.\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#label_outliers-true",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04d.html#label_outliers-true",
    "title": "Hands-on_Ex04d— Funnel Plots for Fair Comparisons",
    "section": "5.1 label_outliers = TRUE",
    "text": "5.1 label_outliers = TRUE\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",\n  label_outliers = TRUE,\n  title = \"Outlier Sub-districts in COVID-19 Fatality Rate\"\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html",
    "title": "Hand-on Exercise 3b — Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "Your browser does not support the video tag."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#basic-concepts-of-animation",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#basic-concepts-of-animation",
    "title": "Hand-on Exercise 3b — Programming Animated Statistical Graphics with R",
    "section": "1.1 Basic concepts of animation",
    "text": "1.1 Basic concepts of animation\nWhen creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot when conveying motion, which is built using some relevant subset of the aggregate data. The subset drives the flow of the animation when stitched back together."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#terminology",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#terminology",
    "title": "Hand-on Exercise 3b — Programming Animated Statistical Graphics with R",
    "section": "1.2 Terminology",
    "text": "1.2 Terminology\nBefore we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning.\n\n\n\n\n\n\n\nTip\n\n\n\nBefore creating animated graphs, it is important to consider whether the effort is justified. While animation may not significantly enhance exploratory data analysis, it can be highly effective in presentations by helping the audience engage with the topic more deeply compared to static visuals"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-a-static-population-bubble-plot",
    "title": "Hand-on Exercise 3b — Programming Animated Statistical Graphics with R",
    "section": "3.1 Building a static population bubble plot",
    "text": "3.1 Building a static population bubble plot\nIn the code chunk below, the basic ggplot2 functions are used to create a static bubble plot.\n\nggplot(globalPop, aes(x = Old, y = Young,\n                      size = Population,\n                      colour = Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2,12)) +\n  labs(title = 'Year: {frame_time}',\n       x = '% Aged',\n       y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-the-animated-bubble-plot",
    "title": "Hand-on Exercise 3b — Programming Animated Statistical Graphics with R",
    "section": "3.2 Building the animated bubble plot",
    "text": "3.2 Building the animated bubble plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\nggplot(globalPop, aes(x = Old, y = Young,\n                      size = Population,\n                      colour = Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2,12)) +\n  labs(title = 'Year: {frame_time}',\n       x = '% Aged',\n       y = '% Young') +\n  transition_time(Year) +\n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#exlore-for-geom_text_repel",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#exlore-for-geom_text_repel",
    "title": "Hand-on Exercise 3b — Programming Animated Statistical Graphics with R",
    "section": "3.3 Exlore for geom_text_repel",
    "text": "3.3 Exlore for geom_text_repel\n\nt &lt;- ggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n    scale_color_manual(values=country_colors) + \n    scale_size(range= c(2,12)) +\n  labs(title = \"Age Distribution Across Time\",\n      subtitle ='Year: {frame_time}',\n         x = '% Aged',\n         y= '% Young')+\n    geom_text(data=globalPop,              \n            aes(x=Old + 1.2,                \n                y=Young + 1.2,            \n                label=Country,\n                color = \"Black\",             \n                hjust=0,\n                vjust= 1.2),\n                size=2.5,\n                show.legend = FALSE)+       \n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")) +  \n  transition_time(Year) +\n  ease_aes(\"linear\")\n\nt"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#explor-for-shape",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#explor-for-shape",
    "title": "Hand-on Exercise 3b — Programming Animated Statistical Graphics with R",
    "section": "3.4 Explor for shape",
    "text": "3.4 Explor for shape\n\nggplot(data= globalPop,\n       aes(x= Old,\n           y=Young,\n           size= Population,\n           color=Country,\n           label=Country)) +                 \n  geom_point(alpha = 0.85,\n             shape=21,\n             stroke =2,\n             show.legend = FALSE) +\n  scale_color_manual(values=country_colors) + \n  scale_size(range= c(2,12)) +\n  labs(title = \"Age Distribution Across Time\",\n      subtitle ='Year: {frame_time}',\n       x = '% Aged',\n       y= '% Young')+\n  geom_text_repel(data=globalPop,           \n            aes(x=Old + 1.2,                \n                y=Young + 1.2,              \n                label=Country,\n                color = \"Black\",          \n                hjust=0,\n                vjust= 1.2),\n            size=2.5,\n            show.legend = FALSE,           \n            max.overlaps=)+\n  theme(plot.background = element_rect(fill = \"#f5f5f5\", color = \"#f5f5f5\")) +\n  transition_time(Year) +\n  ease_aes(\"linear\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-ggplotlymethod",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-ggplotlymethod",
    "title": "Hand-on Exercise 3b — Programming Animated Statistical Graphics with R",
    "section": "4.1 Building an animated bubble plot: ggplotly()method",
    "text": "4.1 Building an animated bubble plot: ggplotly()method\nIn this sub-section, we will create an animated bubble plot by using ggplotly() method.\n\nThe PlotThe Cdoe\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop,\n             aes(x = Old,\n                 y = Young,\n                 size = Population,\n                 colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7,\n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2,12)) +\n  labs(x = '% Aged',\n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\nTip\n\n\n\n-Appropriate ggplot2 functions are used to create a static bubble plot. The output is then saved as an R object called gg.\n-ggplotly() is then used to convert the R graphic object into an animated svg object.\n\n\n\n\n\nNotice that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-plot_lymethod",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#building-an-animated-bubble-plot-plot_lymethod",
    "title": "Hand-on Exercise 3b — Programming Animated Statistical Graphics with R",
    "section": "4.2 Building an animated bubble plot: plot_ly()method",
    "text": "4.2 Building an animated bubble plot: plot_ly()method\nIn this sub-section, we will create an animated bubble plot by using plot_ly() method.\n\nThe PlotThe code\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hand-on Exercise 2 — Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "In this chapter, we will be learning about ggplot2 extensions for creating more elegant and effective statistical graphics. The goals of this exercise is to:\n\ncontrol the placement of annotation on a graph by using functions provided in ggrepel package.\ncreate professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages.\nand plot composite figure by combining ggplot2 graphs by using patchwork package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hand-on Exercise 2 — Beyond ggplot2 Fundamentals",
    "section": "3.1 Working with ggrepel",
    "text": "3.1 Working with ggrepel\nThe previous scatterplot is re-plotted by replacing the geom_label() function in the ggplot2 package with the geom_label_repel() function in the ggrepel package.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hand-on Exercise 2 — Beyond ggplot2 Fundamentals",
    "section": "4.1 Working with ggtheme package",
    "text": "4.1 Working with ggtheme package\nThe ggthemes package provides ggplot2 themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, etc. It also provides some extra geoms and scales for ggplot2.\n\neconomistwsjcalc\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 boundary = 100,\n                 color = \"grey25\",\n                 fill = \"skyblue\") +\n  ggtitle(\"Distribution of Maths score\") +\n  theme_economist()\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 boundary = 100,\n                 color = \"grey25\",\n                 fill = \"red\") +\n  ggtitle(\"Distribution of Maths score\") +\n    theme_wsj()\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 boundary = 100,\n                 color = \"grey25\",\n                 fill = \"grey90\") +\n  ggtitle(\"Distribution of Maths score\") +\n  theme_calc()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbthems-package",
    "title": "Hand-on Exercise 2 — Beyond ggplot2 Fundamentals",
    "section": "4.2 Working with hrbthems package",
    "text": "4.2 Working with hrbthems package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used. The second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"yellow\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\n\nThe second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used. Consult this vignette to learn more.\naxis_title_size argument is used to increase the font size of the axis title to 18, base_size argument is used to increase the default axis label to 15, and grid argument is used to remove the x-axis grid lines.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey99\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "title": "Hand-on Exercise 2 — Beyond ggplot2 Fundamentals",
    "section": "5.1 Creating Composite Graphics: pathwork methods",
    "text": "5.1 Creating Composite Graphics: pathwork methods\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. In this section, I am going to shared with you an ggplot2 extension called patchwork which is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax where we can create layouts super easily. Here’s the general syntax that combines:\n\nTwo-Column Layout using the Plus Sign +.\nParenthesis () to create a subplot group.\nTwo-Row Layout using the Division Sign /"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hand-on Exercise 2 — Beyond ggplot2 Fundamentals",
    "section": "5.2 Combining two ggplot2 graphs",
    "text": "5.2 Combining two ggplot2 graphs\nFigure below shows a composite of two histograms created using patchwork.\n\nTwo-Column LayoutTwo-Row LayoutSide by side in horizontal\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\n\n\n\np1 / p2\n\n\n\n\n\n\n\n\n\n\n\np1 | p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hand-on Exercise 2 — Beyond ggplot2 Fundamentals",
    "section": "5.3 Combining three ggplot2 graphs",
    "text": "5.3 Combining three ggplot2 graphs\nA more complex composite figure can be plotted using other appropriate operators.\nFor example, the composite figure below is plotted by using:\n\n“/” to stack two ggplot2 graphs;\n“|” to place the plots beside each other; and\n“()” to define the sequence of the plotting.\n\n\n/ and | OperatorsAdjust the layout 1Adjust the layout 2\n\n\n\n(p1 /p2) | p3\n\n\n\n\n\n\n\n\n\n\n\np1 + p2 + p3 + plot_layout(ncol=1)\n\n\n\n\n\n\n\n\n\n\n\np3 + {\n  p1 + p2 + plot_layout(ncol=1)\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hand-on Exercise 2 — Beyond ggplot2 Fundamentals",
    "section": "5.4 Creating a composite figure with tag",
    "text": "5.4 Creating a composite figure with tag\nThe patchwork package also allow subplots to be identified in text using its auto-tagging capabilities.\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hand-on Exercise 2 — Beyond ggplot2 Fundamentals",
    "section": "5.5 Creating figure with insert",
    "text": "5.5 Creating figure with insert\nBesides providing functions to place plots next to each other based on the provided layout, the inset_element() function in the patchwork package can place one or several plots or graphic elements freely on top or below another plot.\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hand-on Exercise 2 — Beyond ggplot2 Fundamentals",
    "section": "5.6 Creating a composite figure by using patchwork and ggtheme",
    "text": "5.6 Creating a composite figure by using patchwork and ggtheme\nUsing both the ggthemes and patchwork packages, a composite figure with The Economist theme is created.\n\ntheme_economist()theme_solarized_2()\n\n\n\npatchwork &lt;- (p1 / p2) | p3\n\npatchwork & theme_economist() +\n  theme(plot.title=element_text(size =10),\n                                        axis.title.y=element_text(size = 9,\n                                                                  angle = 0,\n                                                                  vjust=0.9),\n                                         axis.title.x=element_text(size = 9))\n\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\n\npatchwork & theme_solarized_2() +\n  theme(plot.title=element_text(size =10),\n                                        axis.title.y=element_text(size = 9,\n                                                                  angle = 0,\n                                                                  vjust=0.9),\n                                         axis.title.x=element_text(size = 9))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "In this chapter, we will learn the basic principles and essential components of ggplot2, and gain hands-on experience on using these components to plot statistical graphics based on the principle of Layered Grammar of Graphics\nBy then end of this chapter, we will be able to apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.1 Geometric Objects: geom_bar",
    "text": "7.1 Geometric Objects: geom_bar\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.2 Geometric Objects: geom_dotplot",
    "text": "7.2 Geometric Objects: geom_dotplot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.3 Geometric Objects: geom_histogram()",
    "text": "7.3 Geometric Objects: geom_histogram()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.4 Modifying a geometric object by changing geom()",
    "text": "7.4 Modifying a geometric object by changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.5 Modifying a geometric object by changing aes()",
    "text": "7.5 Modifying a geometric object by changing aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.6 Geometric Objects: geom-density()",
    "text": "7.6 Geometric Objects: geom-density()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density(color=\"cyan\")           \n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n          color = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#color-scheme-improvementgeom-density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#color-scheme-improvementgeom-density",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.7 Color scheme improvement–geom-density()",
    "text": "7.7 Color scheme improvement–geom-density()\n\nggplot(data = exam_data, aes(x = MATHS, fill = GENDER, color = GENDER)) +\n  geom_density(linewidth = 2, alpha = 0.6) +\n  scale_color_manual(values = c(\"Female\" = \"#1F77B4\", \"Male\" = \"#2CA02C\")) +\n  scale_fill_manual(values = c(\"Female\" = \"#1F77B4\", \"Male\" = \"#2CA02C\")) +\n  labs(x = \"Maths Score\", y = \"Density\") +\n  theme(plot.background = element_rect(fill = \"#f5f5f5\", colour = \"#f5f5f5\"),\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.8 Geometric Objects: geom_boxplot",
    "text": "7.8 Geometric Objects: geom_boxplot\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(y=MATHS,\n           x=GENDER))+\n  geom_boxplot(notch = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.9 Geometric Objects: geom_violin",
    "text": "7.9 Geometric Objects: geom_violin\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.10 Geometric Objects: geom_point()",
    "text": "7.10 Geometric Objects: geom_point()\n\nggplot(data=exam_data,\n       aes(y=MATHS,\n           x=ENGLISH))+\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "7.11 geom objects can be combined",
    "text": "7.11 geom objects can be combined\n\nggplot(data=exam_data,\n       aes(y=MATHS,\n           x=GENDER)) +\n  geom_boxplot() +\n  geom_point(position = \"jitter\",\n             size=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat()",
    "text": "Working with stat()\n\nggplot(data=exam_data,\n       aes(y=MATHS,x=GENDER)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat - the stat_summary() method",
    "text": "Working with stat - the stat_summary() method\n\nggplot(data=exam_data,\n       aes(y=MATHS,\n           x=GENDER))+\n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun = \"mean\",\n               colour=\"red\",\n               size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with stat - the geom() method",
    "text": "Working with stat - the geom() method\n\nggplot(data=exam_data,\n       aes(y=MATHS,\n           x=GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",\n             fun=\"mean\",\n             colour=\"skyblue1\",\n             size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Adding a best fit curve on a scatterplot",
    "text": "Adding a best fit curve on a scatterplot\n\nggplot(data=exam_data,\n       aes(y=MATHS,\n           x=ENGLISH))+\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(y=MATHS,\n           x=ENGLISH)) +\n  geom_point()+\n  geom_smooth(method = lm,\n              size=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with facet_wrap()",
    "text": "Working with facet_wrap()\n\nggplot(data=exam_data,\n       aes(x=MATHS)) +\n  geom_histogram(bins = 20) +\n  facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "facet_grid() function",
    "text": "facet_grid() function\n\nggplot(data = exam_data,\n       aes(x=MATHS)) +\n  geom_histogram(bins = 20) +\n  facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with Coordinate",
    "text": "Working with Coordinate\n\nggplot(data= exam_data,\n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Changing the y- and x-axis range",
    "text": "Changing the y- and x-axis range\n\nggplot(data=exam_data,\n       aes(x=MATHS,y=ENGLISH)) +\n  geom_point()+\n  geom_smooth(method = lm, size=0.5)\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data, \n       aes(x = MATHS, \n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm, \n              linewidth = 0.5) +  \n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "Working with theme",
    "text": "Working with theme\n\ntheme_gray()theme_classic()theme_minimal()\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#when-plotting-faceted-histograms-an-additional-dimension-is-introduced-for-comparative-analysis.",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#when-plotting-faceted-histograms-an-additional-dimension-is-introduced-for-comparative-analysis.",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "12.1 When plotting faceted histograms, an additional dimension is introduced for comparative analysis.",
    "text": "12.1 When plotting faceted histograms, an additional dimension is introduced for comparative analysis.\n\nggplot(exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n  facet_grid(GENDER ~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#color-names-reference-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#color-names-reference-chart",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "12.2 Color Names Reference Chart",
    "text": "12.2 Color Names Reference Chart"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#interactive-scatter-plot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#interactive-scatter-plot",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "12.3 Interactive Scatter Plot",
    "text": "12.3 Interactive Scatter Plot\n\npacman::p_load(plotly)\n\np &lt;- ggplot(data=exam_data, aes(x = ENGLISH, y = MATHS, color = GENDER)) +\n  geom_point()\n\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#interactive-histogram-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#interactive-histogram-chart",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "12.4 Interactive histogram chart",
    "text": "12.4 Interactive histogram chart\n\np &lt;- ggplot(exam_data, aes(x = ENGLISH)) +\n  geom_histogram(binwidth=10, color= \"cyan4\")\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#add-data-labels-in-the-histograms-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#add-data-labels-in-the-histograms-chart",
    "title": "Hand-on Exercise 1 — A Layered Grammar of Graphics: ggplot2 methods",
    "section": "12.5 Add data labels in the histograms chart",
    "text": "12.5 Add data labels in the histograms chart\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, color = \"cyan2\", fill = \"light blue\") +\n  stat_bin(bins = 20,\n           geom = \"text\",\n           aes(label = after_stat(count)),\n           vjust = -0.2, \n           color = \"tan1\",\n           size = 4)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "A local online media company that publishes daily content on digital platforms is planning to release an article in 2024 focusing on the population structure and distribution of Singapore. The number of resident population is a key indicator in understanding population structure, as it helps analyze aspects such as age composition, gender ratio, regional population density, and developmental disparities. This study aims to explore the differences in Singapore’s population structure and distribution through the organization and visual representation of such data.\n\n\n\nAs a graphical editor of a median company, I conduct exploratory data analysis and visualize the data from the following three aspects:\n\nAge Group Composition across Planning Areas\nIdentify spatial disparities in youth, middle-aged, and elderly population distribution to reveal areas with aging or younger communities.\nGender Distribution and Elderly Gender Imbalance\nExplore male-female ratios and highlight significant gender differences in the elderly population across planning areas.\nRegional Demographics by Age and Gender\nCompare age and gender structures across five major regions to uncover regional demographic trends and planning implications."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-scene",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "A local online media company that publishes daily content on digital platforms is planning to release an article in 2024 focusing on the population structure and distribution of Singapore. The number of resident population is a key indicator in understanding population structure, as it helps analyze aspects such as age composition, gender ratio, regional population density, and developmental disparities. This study aims to explore the differences in Singapore’s population structure and distribution through the organization and visual representation of such data."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#objectives",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#objectives",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "As a graphical editor of a median company, I conduct exploratory data analysis and visualize the data from the following three aspects:\n\nAge Group Composition across Planning Areas\nIdentify spatial disparities in youth, middle-aged, and elderly population distribution to reveal areas with aging or younger communities.\nGender Distribution and Elderly Gender Imbalance\nExplore male-female ratios and highlight significant gender differences in the elderly population across planning areas.\nRegional Demographics by Age and Gender\nCompare age and gender structures across five major regions to uncover regional demographic trends and planning implications."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#dataset-overview",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#dataset-overview",
    "title": "Take-home Exercise 1",
    "section": "2.1 Dataset Overview",
    "text": "2.1 Dataset Overview\nThe dataset used for this analysis is “Singapore Resident Population by Planning Area/Subzone, Single Year of Age and Sex, June 2024,” published by the Singapore Department of Statistics (DOS) on https://www.singstat.gov.sg. The data covers all planning areas and subzones across the Singapore, listing the number of resident population (Residents) by age and sex."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#loading-r-packages",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#loading-r-packages",
    "title": "Take-home Exercise 1",
    "section": "2.2 Loading R packages",
    "text": "2.2 Loading R packages\n\n\n\n\n\n\n\nLibrary\nPurpose\n\n\n\n\n tidyverse \nInclude dplyr for data manipulation (mutate, group_by, summarize), ggplot2 for visualization (histograms, boxplots), and forcats for factor handling and variable ordering\n\n\n ggrepel \nan R package provides geoms for ggplot2 to repel overlapping text labels\n\n\n ggthemes \nan R package provides some extra themes, geoms, and scales for ‘ggplot2’\n\n\n hrbrthemes \nan R package provides typography-centric themes and theme components for ggplot2\n\n\n patchwork \nan R package for preparing composite figure created using ggplot2\n\n\n ggdist \nan R package for visualisation of distributions and uncertainity.\n\n\n ggridges \nan R package for creating density plots for visualisation of continuous distribution.\n\n\n forcats \nan R package for working with categorical variables (factors), including tools for reordering and modifying factor levels\n\n\n viridis \nan R package providing color scales that are perceptually uniform\n\n\n scales \nan R package providing tools to customize axis labels, legends, and formatting in visualizations\n\n\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggdist, ggridges, forcats, viridis, scales\n)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#importing-the-data",
    "title": "Take-home Exercise 1",
    "section": "2.3 Importing the data",
    "text": "2.3 Importing the data\nThe dataset used in this study is in CSV format. The dataset is imported using the  read_csv()  function and is named as “data”.\n\ndata &lt;- read_csv(\"data/respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-exploration",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-exploration",
    "title": "Take-home Exercise 1",
    "section": "2.4 Data exploration",
    "text": "2.4 Data exploration\n\n2.4.1 Overview of Data Structure and Statistics\nExplore the basic information of the dataset by using  summary() ,  glimpse()  and  file.info() . The dataset contains 60,424 observations and 6 variables, describing population counts disaggregated by planning areas, subzones, age groups, sex, and time (year).The size of the dataset is 2.5MB.\n\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\nPA (Planning Area)\nCharacter variable indicating planning areas\n\n\nSZ (Subzone)\nCharacter variable indicating subzones\n\n\nAge\nCharacter variable representing age groups\n\n\nSex\nCharacter variable indicating gender\n\n\nPop\nNumeric variable (&lt;dbl&gt;) representing the population count.\n\n\nTime\nNumeric variable (&lt;dbl&gt;) indicating the year, with all values are 2024.\n\n\n\n\nsummary()glimpse()file size\n\n\n\nsummary(data)\n\n      PA                 SZ                Age                Sex           \n Length:60424       Length:60424       Length:60424       Length:60424      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n      Pop              Time     \n Min.   :   0.0   Min.   :2024  \n 1st Qu.:   0.0   1st Qu.:2024  \n Median :  20.0   Median :2024  \n Mean   :  69.4   Mean   :2024  \n 3rd Qu.:  90.0   3rd Qu.:2024  \n Max.   :1180.0   Max.   :2024  \n\n\n\n\n\nglimpse(data)\n\nRows: 60,424\nColumns: 6\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  &lt;chr&gt; \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  &lt;chr&gt; \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n\n\n\n\n\nfile.info(\"data/respopagesex2024.csv\")\n\n                             size isdir mode               mtime\ndata/respopagesex2024.csv 2521616 FALSE  644 2024-09-23 17:44:00\n                                        ctime               atime uid gid\ndata/respopagesex2024.csv 2025-05-02 17:13:57 2025-05-11 19:05:48 501  20\n                             uname grname\ndata/respopagesex2024.csv liyuquan  staff\n\n\n\n\n\n\n\n2.4.2 Check missing value\nMap all possible null values in the data to NA. Use  is.na  to check the data and output FALSE, indicating that there are no missing values in the dataset.\n\ndata[data == \"\"] &lt;- NA\nany(is.na(data))\n\n[1] FALSE\n\n\n\n\n2.4.3 Check for duplication\nUsing the duplicated function, the output is “# A tibble: 0 × 6”, which indicates that there are no duplicate entries in the data.\n\ndata[duplicated(data),]\n\n# A tibble: 0 × 6\n# ℹ 6 variables: PA &lt;chr&gt;, SZ &lt;chr&gt;, Age &lt;chr&gt;, Sex &lt;chr&gt;, Pop &lt;dbl&gt;,\n#   Time &lt;dbl&gt;"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-pre-processing",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-pre-processing",
    "title": "Take-home Exercise 1",
    "section": "2.5 Data pre-processing",
    "text": "2.5 Data pre-processing\n\n2.5.1 Convert data type\nIn the original dataset, the data type of the Age variable is character. Among them, there is data “90_and_Over”. We will replace this data with “90” and convert the data type of this variable to numeric.\n\ndata1 &lt;- data %&gt;%\n  mutate(\n    Age = if_else(Age == \"90_and_Over\", \"90\", as.character(Age)),\n    Age = as.numeric(Age)\n  )\n\n\n\n2.5.2 Construct new variable\n\n2.5.2.1 Grouped by broad age categories → v1 → Age_Group\nUse mutate() to create a new variable and apply case_when() to categorize the values of Age into three groups: Youth (0–21 years), Middle (22–64 years), and Elderly (65–90 years).\n\nv1 &lt;- data1 %&gt;%\n  mutate(\n    Age_Group = case_when(\n      Age &lt;= 21 ~ \"Youth\",\n      Age &lt; 65 ~ \"Middle\",\n      TRUE ~ \"Elderly\"\n    )\n  )\n\n\n\n2.5.2.2 Grouped by fine-grained 5-year age intervals → v2 → Age_Group\nUse mutate() to create a new variable and apply cut() to bin the Age data into 5-year intervals from 0 to 89 years, with an additional group at the end labeled as “90_and_over” for ages 90 and above.\n\nv2 &lt;- data1 %&gt;%\n  mutate(\n    Age_Group = cut(\n      Age,\n      breaks = c(seq(0, \n                     90, \n                     by = 5), \n                 Inf),\n      right = FALSE,\n      labels = c(\n        \"00_to_04\", \"05_to_09\", \"10_to_14\", \"15_to_19\", \"20_to_24\",\n        \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\",\n        \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\",\n        \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\"\n      )\n    )\n  )\n\n\n\n2.5.2.3 Group the planning areas by regions → v3_region → region\nUse tribble() to categorize the 55 planning areas (PA) in the original dataset into five regions: West, Central, East, North, and North-East. Name this new variable Region, and use left_join() to merge the resulting table into the v3_region dataset.\n\nregion_mapping &lt;- tribble(\n  ~PA,                     ~Region,\n  # Central\n  \"Bishan\",                \"Central\",\n  \"Bukit Merah\",          \"Central\",\n  \"Bukit Timah\",          \"Central\",\n  \"Downtown Core\",        \"Central\",\n  \"Geylang\",              \"Central\",\n  \"Kallang\",              \"Central\",\n  \"Marina East\",          \"Central\",\n  \"Marina South\",         \"Central\",\n  \"Marine Parade\",        \"Central\",\n  \"Museum\",               \"Central\",\n  \"Newton\",               \"Central\",\n  \"Novena\",               \"Central\",\n  \"Orchard\",              \"Central\",\n  \"Outram\",               \"Central\",\n  \"Queenstown\",           \"Central\",\n  \"River Valley\",         \"Central\",\n  \"Rochor\",               \"Central\",\n  \"Singapore River\",      \"Central\",\n  \"Southern Islands\",     \"Central\",\n  \"Straits View\",         \"Central\",\n  \"Tanglin\",              \"Central\",\n  \"Toa Payoh\",            \"Central\",\n\n  # East\n  \"Bedok\",                \"East\",\n  \"Changi\",               \"East\",\n  \"Changi Bay\",           \"East\",\n  \"Pasir Ris\",            \"East\",\n  \"Paya Lebar\",           \"East\",\n  \"Tampines\",             \"East\",\n\n  # North\n  \"Central Water Catchment\", \"North\",\n  \"Lim Chu Kang\",            \"North\",\n  \"Mandai\",                  \"North\",\n  \"Sembawang\",               \"North\",\n  \"Simpang\",                 \"North\",\n  \"Sungei Kadut\",            \"North\",\n  \"Woodlands\",               \"North\",\n  \"Yishun\",                  \"North\",\n\n  # North-East\n  \"Ang Mo Kio\",             \"North-East\",\n  \"Hougang\",                \"North-East\",\n  \"North-Eastern Islands\",  \"North-East\",\n  \"Punggol\",                \"North-East\",\n  \"Seletar\",                \"North-East\",\n  \"Sengkang\",               \"North-East\",\n  \"Serangoon\",              \"North-East\",\n\n  # West\n  \"Boon Lay\",               \"West\",\n  \"Bukit Batok\",            \"West\",\n  \"Bukit Panjang\",          \"West\",\n  \"Choa Chu Kang\",          \"West\",\n  \"Clementi\",               \"West\",\n  \"Jurong East\",            \"West\",\n  \"Jurong West\",            \"West\",\n  \"Pioneer\",                \"West\",\n  \"Tengah\",                 \"West\",\n  \"Tuas\",                   \"West\",\n  \"Western Islands\",        \"West\",\n  \"Western Water Catchment\",\"West\"\n)\n\nv3_region &lt;- data1 %&gt;%\n  left_join(region_mapping, by = \"PA\") %&gt;%\n  filter(!is.na(Region))\n\n\n\n\n2.5.3 Data prepare for Visualization\n\n2.5.3.1 Data prepare for Visualization 3.1\n\nDescriptionThe Code\n\n\nv1_grouped_all summarizes the total population counts and corresponding ratios of the Elderly (≥ 65), Youth (≤ 21), and Middle-aged (22–64) groups for each Planning Area (PA). It ensures that only areas with valid computed ratios for all three groups are retained, forming the analytical base for plots p1, p2, and p3.\nThe top_bottom_elderly, top_bottom_youth, and top_bottom_middle subsets extract the top and bottom 10 Planning Areas based on the proportions of elderly, youth, and middle-aged populations respectively, with the PA factor reordered by each corresponding age group ratio to facilitate ranked comparisons in plots p1, p2, and p3.\nv1_p4 prepares the full age group composition by Planning Area for visualization in plot p4. It calculates the population share (Ratio) of each age group within each PA. Additionally, each PA is sorted by the ratio of middle-aged residents, and the PA variable is re-leveled accordingly to ensure consistent display order.\nv1_p5 dataset calculates the overall proportion of each age group across Singapore, and derives variables (xmin, xmax, label_x) to position percentage labels for a horizontal stacked visualization.\n\n\n\nv1_grouped_all &lt;- v1 %&gt;%\n  group_by(PA) %&gt;%\n  summarise(\n    Elderly = sum(Pop[Age &gt;= 65], \n                  na.rm = TRUE),\n    Youth = sum(Pop[Age &lt;= 21], \n                na.rm = TRUE),\n    Middle = sum(Pop[Age &gt; 21 & Age &lt; 65], \n                 na.rm = TRUE),\n    Total = sum(Pop, \n                na.rm = TRUE),\n    Elderly_Rate = Elderly / Total,\n    Youth_Rate = Youth / Total,\n    Middle_Rate = Middle / Total,\n    .groups = \"drop\"\n  ) %&gt;%\n  filter(!is.na(Elderly_Rate) & !is.na(Youth_Rate) & !is.na(Middle_Rate))\n\n# filter top_bottom for p1 p2 p3\ntop_bottom_elderly &lt;- bind_rows(\n  slice_max(v1_grouped_all, \n            Elderly_Rate, \n            n = 10),\n  slice_min(v1_grouped_all, \n            Elderly_Rate, \n            n = 10)\n) %&gt;%\n  mutate(PA = fct_reorder(PA, \n                          Elderly_Rate))\n\ntop_bottom_youth &lt;- bind_rows(\n  slice_max(v1_grouped_all, \n            Youth_Rate, \n            n = 10),\n  slice_min(v1_grouped_all, \n            Youth_Rate, \n            n = 10)\n) %&gt;%\n  mutate(PA = fct_reorder(PA, \n                          Youth_Rate))\n\ntop_bottom_middle &lt;- bind_rows(\n  slice_max(v1_grouped_all, \n            Middle_Rate, \n            n = 10),\n  slice_min(v1_grouped_all, \n            Middle_Rate, \n            n = 10)\n) %&gt;%\n  mutate(PA = fct_reorder(PA, \n                          Middle_Rate))\n\n# p4\nv1_p4 &lt;- v1 %&gt;%\n  group_by(PA, Age_Group) %&gt;%\n  summarise(Pop = sum(Pop, na.rm = TRUE), .groups = \"drop\") %&gt;%\n  group_by(PA) %&gt;%\n  mutate(\n    Total = sum(Pop),\n    Ratio = Pop / Total\n  ) %&gt;%\n  filter(Total &gt; 0) %&gt;%\n  select(-Total) %&gt;%\n  ungroup() %&gt;%\n  group_by(PA) %&gt;%\n  mutate(Middle_Ratio = Ratio[Age_Group == \"Middle\"]) %&gt;%\n  ungroup() %&gt;%\n  arrange(desc(Middle_Ratio)) %&gt;%\n  mutate(PA = factor(PA, levels = unique(PA))) %&gt;%\n  select(-Middle_Ratio)\n\n# p5\nv1_p5 &lt;- v1 %&gt;%\n  group_by(Age_Group) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  mutate(\n    Prop = Pop / sum(Pop),\n    Percent = paste0(Age_Group, \": \", \n                     round(Prop * 100, 1), \n                     \"%\"),\n    xmin = cumsum(lag(Prop, default = 0)),\n    xmax = cumsum(Prop),\n    label_x = (xmin + xmax) / 2\n  )\n\n\n\n\n\n\n2.5.3.2 data prepare for Visualization 3.2\n\nDescriptionThe Code\n\n\nv2_p6 calculates the total population of males and females across different age groups, along with their respective proportions of the total population. It assigns mirrored percentage values by gender (positive for males, negative for females) to prepare for the construction of a population pyramid. This approach facilitates the comparison of gender distribution across age groups.\nv2_p7 calculates the gender-specific population count for each Planning Area (PA) and computes the proportion of each gender within the area’s total population. For visualization purposes, Percent_plot is mirrored (positive for males, negative for females), and the PA variable is reordered based on total population to support meaningful comparative plotting.\nv2_p8 computes the elderly population ratio (aged ≥ 65) for both males and females in each Planning Area. It mirrors the values for plotting (positive for males, negative for females), filters out regions with zero elderly population, and selects the top and bottom 10 PA based on elderly population share. These selected areas are used to compare gender differences in aging patterns.\n\n\n\n# p6\nv2_p6 &lt;- v2 %&gt;%\n  group_by(Sex, Age_Group) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  mutate(\n    Percent = Pop / sum(Pop) * 100,\n    Percent_plot = ifelse(Sex == \"Males\", \n                          Percent, \n                          -Percent)\n  )\n\n# p7\nv2_p7 &lt;- v2 %&gt;%\n  group_by(PA, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\ntotal_pa &lt;- v2_p7 %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Total = sum(Pop), .groups = \"drop\")\n\nv2_p7 &lt;- left_join(v2_p7, \n                   total_pa, \n                   by = \"PA\") %&gt;%\n  mutate(\n    Percent = Pop / Total * 100,\n    Percent_plot = ifelse(Sex == \"Males\", \n                          Percent, \n                          -Percent)\n  ) %&gt;%\n  group_by(PA) %&gt;%\n  filter(sum(Pop) &gt; 0) %&gt;%\n  ungroup() %&gt;%\n  mutate(PA = fct_reorder(PA, Total))\n\n# p8\nv2_p8 &lt;- v2 %&gt;%\n  group_by(PA, Sex) %&gt;%\n  summarise(\n    Total = sum(Pop, na.rm = TRUE),\n    Elderly = sum(Pop[Age &gt;= 65], na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  mutate(\n    Elderly_Rate = ifelse(Total &gt; 0, \n                          Elderly / Total * 100, 0),\n    Elderly_Rate_plot = ifelse(Sex == \"Males\", \n                               Elderly_Rate, \n                               -Elderly_Rate)\n  )\n\nvalid_PA &lt;- v2_p8 %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Total_Elderly = sum(Elderly)) %&gt;%\n  filter(Total_Elderly &gt; 0) %&gt;%\n  pull(PA)\n\nv2_p8 &lt;- v2_p8 %&gt;% filter(PA %in% valid_PA)\n\npa_avg &lt;- v2_p8 %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Avg_Elderly_Rate = mean(Elderly_Rate), .groups = \"drop\")\n\nselected_PA &lt;- bind_rows(\n  slice_max(pa_avg, \n            Avg_Elderly_Rate, \n            n = 10),\n  slice_min(pa_avg, \n            Avg_Elderly_Rate, \n            n = 10)\n) %&gt;%\n  arrange(desc(Avg_Elderly_Rate)) %&gt;%\n  pull(PA)\n\nv2_p8 &lt;- v2_p8 %&gt;%\n  filter(PA %in% selected_PA) %&gt;%\n  mutate(PA = factor(PA, levels = rev(selected_PA)))\n\n\n\n\n\n\n2.5.3.3 data prepare for Visualization 3.3\n\nDescriptionThe Code\n\n\nv3_p9This dataset aggregates the total population by region and calculates each region’s percentage share of the overall population. A new Label column is also created to display the region name, total population , and its percentage share.\nv3_p10 expands the original region-level aggregated population data into individual-level rows, where each row represents a single person.\nv3_p11 draws approximately 0.07% of the data by region and sex as a sample, in order to support visually cleaner and more efficient distribution visualizations.\nv3_points extracts a further small sample (0.02%) from the full individual-level dataset, stratified by Region and Age. A numeric mapping of Region is added (Region_numeric) to enable vertical jittering in visualizations by numerical y-position.\n\n\n\nv3_p9 &lt;- v3_region %&gt;%\n  group_by(Region) %&gt;%\n  summarise(Total_Pop = sum(Pop, na.rm = TRUE)) %&gt;%\n  mutate(\n    Percent = Total_Pop / sum(Total_Pop) * 100,\n    Label = paste0(Region, \"\\n\", comma(Total_Pop), \"\\n\", round(Percent, 1), \"%\")\n  )\n\nv3_p10 &lt;- v3_region %&gt;%\n  uncount(weights = Pop)\n\nv3_p11 &lt;- v3_p10 %&gt;%\n  group_by(Region, Sex) %&gt;%\n  sample_frac(0.0007)\n\nv3_ridges &lt;- v3_p10 \nv3_points &lt;- v3_p10 %&gt;%\n  group_by(Region, Age) %&gt;%\n  sample_frac(0.0002)\nregion_levels &lt;- levels(fct_rev(factor(v3_ridges$Region)))\nv3_points &lt;- v3_points %&gt;%\n  mutate(Region_numeric = match(Region, region_levels))\n\n\n\n\n\n\n\n2.5.4 Preview pre-processed data\nUse head() to display the first 200 rows of the data. By viewing the processed data, we can observe that new variables have been added to the corresponding data sets.\n\ndatav1v2v3_region\n\n\n\nhead(data, 200)\n\n# A tibble: 200 × 6\n   PA         SZ                     Age   Sex       Pop  Time\n   &lt;chr&gt;      &lt;chr&gt;                  &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;\n 1 Ang Mo Kio Ang Mo Kio Town Centre 0     Males      10  2024\n 2 Ang Mo Kio Ang Mo Kio Town Centre 0     Females    10  2024\n 3 Ang Mo Kio Ang Mo Kio Town Centre 1     Males      10  2024\n 4 Ang Mo Kio Ang Mo Kio Town Centre 1     Females    10  2024\n 5 Ang Mo Kio Ang Mo Kio Town Centre 2     Males      10  2024\n 6 Ang Mo Kio Ang Mo Kio Town Centre 2     Females    10  2024\n 7 Ang Mo Kio Ang Mo Kio Town Centre 3     Males      10  2024\n 8 Ang Mo Kio Ang Mo Kio Town Centre 3     Females    10  2024\n 9 Ang Mo Kio Ang Mo Kio Town Centre 4     Males      30  2024\n10 Ang Mo Kio Ang Mo Kio Town Centre 4     Females    10  2024\n# ℹ 190 more rows\n\n\n\n\n\nhead(v1,200)\n\n# A tibble: 200 × 7\n   PA         SZ                       Age Sex       Pop  Time Age_Group\n   &lt;chr&gt;      &lt;chr&gt;                  &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    \n 1 Ang Mo Kio Ang Mo Kio Town Centre     0 Males      10  2024 Youth    \n 2 Ang Mo Kio Ang Mo Kio Town Centre     0 Females    10  2024 Youth    \n 3 Ang Mo Kio Ang Mo Kio Town Centre     1 Males      10  2024 Youth    \n 4 Ang Mo Kio Ang Mo Kio Town Centre     1 Females    10  2024 Youth    \n 5 Ang Mo Kio Ang Mo Kio Town Centre     2 Males      10  2024 Youth    \n 6 Ang Mo Kio Ang Mo Kio Town Centre     2 Females    10  2024 Youth    \n 7 Ang Mo Kio Ang Mo Kio Town Centre     3 Males      10  2024 Youth    \n 8 Ang Mo Kio Ang Mo Kio Town Centre     3 Females    10  2024 Youth    \n 9 Ang Mo Kio Ang Mo Kio Town Centre     4 Males      30  2024 Youth    \n10 Ang Mo Kio Ang Mo Kio Town Centre     4 Females    10  2024 Youth    \n# ℹ 190 more rows\n\n\n\n\n\nhead(v2,200)\n\n# A tibble: 200 × 7\n   PA         SZ                       Age Sex       Pop  Time Age_Group\n   &lt;chr&gt;      &lt;chr&gt;                  &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;    \n 1 Ang Mo Kio Ang Mo Kio Town Centre     0 Males      10  2024 00_to_04 \n 2 Ang Mo Kio Ang Mo Kio Town Centre     0 Females    10  2024 00_to_04 \n 3 Ang Mo Kio Ang Mo Kio Town Centre     1 Males      10  2024 00_to_04 \n 4 Ang Mo Kio Ang Mo Kio Town Centre     1 Females    10  2024 00_to_04 \n 5 Ang Mo Kio Ang Mo Kio Town Centre     2 Males      10  2024 00_to_04 \n 6 Ang Mo Kio Ang Mo Kio Town Centre     2 Females    10  2024 00_to_04 \n 7 Ang Mo Kio Ang Mo Kio Town Centre     3 Males      10  2024 00_to_04 \n 8 Ang Mo Kio Ang Mo Kio Town Centre     3 Females    10  2024 00_to_04 \n 9 Ang Mo Kio Ang Mo Kio Town Centre     4 Males      30  2024 00_to_04 \n10 Ang Mo Kio Ang Mo Kio Town Centre     4 Females    10  2024 00_to_04 \n# ℹ 190 more rows\n\n\n\n\n\nhead(v3_region,200)\n\n# A tibble: 200 × 7\n   PA         SZ                       Age Sex       Pop  Time Region    \n   &lt;chr&gt;      &lt;chr&gt;                  &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     \n 1 Ang Mo Kio Ang Mo Kio Town Centre     0 Males      10  2024 North-East\n 2 Ang Mo Kio Ang Mo Kio Town Centre     0 Females    10  2024 North-East\n 3 Ang Mo Kio Ang Mo Kio Town Centre     1 Males      10  2024 North-East\n 4 Ang Mo Kio Ang Mo Kio Town Centre     1 Females    10  2024 North-East\n 5 Ang Mo Kio Ang Mo Kio Town Centre     2 Males      10  2024 North-East\n 6 Ang Mo Kio Ang Mo Kio Town Centre     2 Females    10  2024 North-East\n 7 Ang Mo Kio Ang Mo Kio Town Centre     3 Males      10  2024 North-East\n 8 Ang Mo Kio Ang Mo Kio Town Centre     3 Females    10  2024 North-East\n 9 Ang Mo Kio Ang Mo Kio Town Centre     4 Males      30  2024 North-East\n10 Ang Mo Kio Ang Mo Kio Town Centre     4 Females    10  2024 North-East\n# ℹ 190 more rows"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#population-age-structure-across-singapore-planning-areas",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#population-age-structure-across-singapore-planning-areas",
    "title": "Take-home Exercise 1",
    "section": "3.1 Population Age Structure Across Singapore Planning Areas",
    "text": "3.1 Population Age Structure Across Singapore Planning Areas\nThis data visualisation presents the age structure of Singapore’s resident population across different planning areas, divided into three categories: Youth (aged 21 and below), Middle-aged (22 to 64), and Elderly (65 and above).\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# common theme\ncommon_theme &lt;- theme(\n  plot.title = element_text(size = 10, \n                            face = \"bold\", \n                            hjust = 0),\n  axis.text.y = element_text(size = 7),\n  legend.position = \"right\"\n)\n\n# elderly plot\np1 &lt;- ggplot(top_bottom_elderly, aes(x = Elderly_Rate, \n                                     y = PA, \n                                     fill = Elderly_Rate)) +\n  geom_col() +\n  xlim(0, 0.35) +\n  scale_fill_viridis_c(option = \"C\") +\n  labs(\n    title = \"Top 10 & Bottom 10 Areas by Elderly Rate (≥ 65)\",\n    x = \"Elderly Ratio\",\n    y = \"Planning Area\"\n  ) +\n  theme_minimal() +\n  common_theme\n\n# youth plot\np2 &lt;- ggplot(top_bottom_youth, aes(x = Youth_Rate, \n                                   y = PA, \n                                   fill = Youth_Rate)) +\n  geom_col() +\n  xlim(0, 0.35) +\n  scale_fill_viridis_c(option = \"C\") +\n  labs(\n    title = \"Top 10 & Bottom 10 Areas by Youth Rate (≤ 21)\",\n    x = \"Youth Ratio\",\n    y = \"Planning Area\"\n  ) +\n  theme_minimal() +\n  common_theme\n\n# middle plot\np3 &lt;- ggplot(top_bottom_middle, aes(x = Middle_Rate, y = PA, fill = Middle_Rate)) +\n  geom_col() +\n  xlim(0, 1) +\n  scale_fill_viridis_c(option = \"C\") +\n  labs(\n    title = \"Top 10 & Bottom 10 Areas by Middle-aged Rate (22-64)\",\n    x = \"Middle-aged Ratio\",\n    y = \"Planning Area\"\n  ) +\n  theme_minimal() +\n  common_theme\n\n# Plot for each area\np4 &lt;- ggplot(v1_p4, aes(x = PA, \n                        y = Ratio, \n                        fill = Age_Group)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  labs(\n    title = \"Age Group Composition by Planning Area\",\n    x = \"Planning Area\",\n    y = \"Population Ratio\"\n  ) +\n  scale_fill_viridis_d(option = \"C\", \n                       begin = 0.2, \n                       end = 0.9) +\n  theme_minimal() +\n  common_theme\n\n# Total Plot \np5 &lt;- ggplot(v1_p5) +\n  geom_rect(aes(xmin = xmin, xmax = xmax, ymin = 0, ymax = 1, fill = Age_Group)) +\n  geom_text(aes(x = label_x, \n                y = 0.5, \n                label = Percent), \n            color = \"white\", size = 3, \n            fontface = \"bold\") +\n  scale_fill_manual(values = c(\"Youth\" = \"#FDD75E\", \n                               \"Middle\" = \"#C94C5C\", \n                               \"Elderly\" = \"#5626A6\")) +\n  coord_cartesian(ylim = c(0, 1)) +\n  theme_void() +\n  ggtitle(\"Total Age Group Composition\") +\n  theme(\n    aspect.ratio = 0.05,  \n    plot.title = element_text(hjust = 0.5, \n                              size = 10, \n                              face = \"bold\"),\n    plot.margin = margin(0.2, 0.5, 0.2, 0.5, \n                         unit = \"cm\"),\n    legend.position = \"none\"\n  )\n\n\n\np5 / ((p1 / p2 / p3) | p4)\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\n\nNationally, the middle-aged group forms the majority (61.1%), followed by Youth (20.9%) and Elderly (18%).\nThe top ten planning areas with the highest proportion of elderly residents include Outram, Ang Mo Kio, and Bukit Merah, suggesting these may be aging communities with long-established residential zones.\nYouth populations are more concentrated in areas such as Changi, Punggol, and Southern Islands, possibly due to lower living costs for younger individuals or proximity to educational institutions. In contrast, central areas like Museum and Downtown Core have the lowest youth representation.\nMiddle-aged individuals dominate areas such as Museum, Seletar, and Downtown Core, where their proportion reaches up to 90%. This may indicate these are employment hubs where middle-aged individuals with stronger spending power tend to reside.\nOverall, the visualisation reveals clear spatial disparities in age composition across planning areas, highlighting urban ageing, youth clustering in peripheral areas, and middle-aged dominance in central or transitional zones."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#gender-based-demographics-of-singapore-residents",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#gender-based-demographics-of-singapore-residents",
    "title": "Take-home Exercise 1",
    "section": "3.2 Gender-Based Demographics of Singapore Residents",
    "text": "3.2 Gender-Based Demographics of Singapore Residents\nThis visualisation presents the age and gender structure of Singapore’s population across different planning areas, with each chart highlighting population distribution by gender.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# common theme\ncommon_theme_v2 &lt;- theme(\n  plot.title = element_text(size = 12, \n                            face = \"bold\", \n                            hjust = 0),\n  axis.text.y = element_text(size = 7),\n  legend.position = \"right\"\n)\n\n# p6 \np6 &lt;- ggplot(v2_p6, aes(x = Percent_plot, \n                        y = Age_Group, \n                        fill = Sex)) +\n  geom_col(width = 0.9) +\n  geom_text(\n    data = subset(v2_p6, \n                  Sex == \"Females\"),\n    aes(label = paste0(round(abs(Percent), 2), \"%\")),\n    nudge_x = -2, \n    size = 3.2,\n    color = \"black\"\n  ) +\n  geom_text(\n    data = subset(v2_p6, \n                  Sex == \"Males\"),\n    aes(label = paste0(round(abs(Percent), 2), \"%\")),\n    nudge_x = 2,  \n    size = 3.2,\n    color = \"black\"\n  ) +\n  \n  scale_x_continuous(labels = function(x) paste0(abs(x), \"%\")) +\n  scale_fill_manual(values = c(\"Males\" = \"#58c3c3\", \n                               \"Females\" = \"#f08080\")) +\n  labs(\n    title = \"Population Pyramid: Singapore\",\n    x = \"Percentage of Population (%)\",\n    y = \"Age Group\",\n    fill = \"Sex\"\n  ) +\n  coord_cartesian(xlim = c(-8, 8)) +  \n  theme_minimal() +\n  common_theme_v2\n\n#p7\np7 &lt;- ggplot(v2_p7, \n             aes(x = Percent_plot, \n                        y = PA, \n                        fill = Sex)) +\n  geom_col(width = 0.8) +\n  geom_text(aes(label = round(abs(Percent), 1)),\n            position = position_stack(vjust = 0.5),\n            size = 3, color = \"black\") +\n  scale_x_continuous(limits = c(-60, 60),\n                     labels = function(x) paste0(abs(x), \"%\")) +\n  scale_fill_manual(values = c(\"Males\" = \"#58c3c3\", \n                               \"Females\" = \"#f08080\")) +\n  labs(\n    title = \"Gender Composition by Planning Area\",\n    x = \"Percentage of Population (%)\",\n    y = \"Planning Area\",\n    fill = \"Sex\"\n  ) +\n  theme_minimal() +\n  common_theme_v2\n\n# p8\np8 &lt;- ggplot(v2_p8, aes(x = Elderly_Rate_plot, \n                        y = PA, \n                        fill = Sex)) +\n  geom_col(width = 0.8) +\n  geom_text(\n    data = subset(v2_p8, \n                  Sex == \"Females\"),\n    aes(label = paste0(round(abs(Elderly_Rate), 1), \"%\")),\n    nudge_x = -9,\n    size = 3,\n    color = \"black\"\n  ) +\n  \n  geom_text(\n    data = subset(v2_p8, \n                  Sex == \"Males\"),\n    aes(label = paste0(round(abs(Elderly_Rate), 1), \"%\")),\n    nudge_x = 9,\n    size = 3,\n    color = \"black\"\n  ) +\n  scale_x_continuous(labels = function(x) paste0(abs(x), \"%\")) +\n  scale_fill_manual(values = c(\"Males\" = \"#58c3c3\", \n                               \"Females\" = \"#f08080\")) +\n  labs(\n    title = \"Top 10 & Bottom 10 Areas by Elderly Rate\\n(≥ 65) by Gender\",\n    x = \"Elderly Population Ratio (%)\",\n    y = \"Planning Area\",\n    fill = \"Sex\"\n  ) +\n    coord_cartesian(xlim = c(-50, 50)) +  \n  theme_minimal() +\n  common_theme_v2\n\n\n(p6 / p8) | p7\n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\n\nThe population pyramid in the top-left shows the proportion of males and females across various age groups. The gender ratio is relatively balanced below age 64, but females significantly outnumber males in the 65 and above age groups, suggesting a larger elderly female population likely due to longer life expectancy.\nThe chart on the right displays the gender composition by planning area. In most areas, females slightly outnumber males, with the highest female proportions found in Orchard (56.3%), Western Water Catchment (55.9%), and Seletar (57.1%). In contrast, areas like Sungei Kadut and Changi have higher male proportions, possibly due to the dominance of male-oriented industries in those regions.\nThe bottom-left chart presents the top 10 and bottom 10 areas by elderly population ratio (≥65), disaggregated by gender. Outram, Ang Mo Kio, and Rochor have the highest elderly ratios, and females consistently make up a larger share of the elderly population, further highlighting gendered ageing trends.\nOverall, the visualisation reveals a gender imbalance among the elderly, with females forming the majority, and illustrates regional differences in gender and age distribution—providing important insights for planning in healthcare, housing, and social services."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#population-structure-across-singapore-regions",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#population-structure-across-singapore-regions",
    "title": "Take-home Exercise 1",
    "section": "3.3 Population Structure Across Singapore Regions",
    "text": "3.3 Population Structure Across Singapore Regions\nThis visualization presents the population size, gender, and age distribution across the five main regions of Singapore: Central, East, North, North-East, and West.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# theme\ncommon_theme_v3 &lt;- theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", \n                              size = 14, \n                              hjust = 0.5),\n    axis.title = element_text(size = 12),\n    axis.text = element_text(size = 10),\n    legend.position = \"top\"\n  )\n\n\n# p9\np9 &lt;- ggplot(v3_p9, aes(x = 2, \n                        y = Total_Pop, \n                        fill = Region)) +\n  geom_col(width = 1, \n           color = \"white\") +\n  coord_polar(theta = \"y\") +\n  xlim(c(1, 2.5)) + \n  geom_text(\n    aes(label = Label),\n    position = position_stack(vjust = 0.5),\n    size = 3\n  ) +\n  labs(title = \"Population Distribution by Region\") +\n  theme_void() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    legend.position = \"none\"\n  ) +\n  scale_fill_brewer(palette = \"Set3\")\n\n  \n  \n\n# p10\np10 &lt;- ggplot(v3_p10, \n              aes(x = Age, \n                  y = Region, \n                  fill = Sex)) +\n  geom_density_ridges(\n    alpha = 0.5,\n    scale = 1.2,\n    color = \"white\",\n    position = \"identity\"\n  ) +\n  scale_fill_manual(values = c(\"Males\" = \"#58c3c3\", \n                               \"Females\" = \"#f08080\")) +\n  scale_x_continuous(breaks = seq(0, 90, by = 10), limits = c(0, 90)) + \n  labs(\n    title = \"Age Distribution by Region\",\n    x = NULL,\n    y = NULL,\n    fill = NULL\n  ) +\n  theme_minimal() +\n  common_theme_v3 \n\n# p11\np11 &lt;- ggplot() +\n  geom_boxplot(\n    data = v3_p10,\n    aes(x = Region, \n        y = Age, \n        color = Sex),\n    position = position_dodge(width = 0.75),\n  ) +\n  geom_point(\n    data = v3_p11,\n    aes(x = Region, \n        y = Age, \n        color = Sex),\n    position = position_jitterdodge(jitter.width = 0.3, \n                                    dodge.width = 0.75),\n    size = 0.5,\n    alpha = 0.4\n  ) +\n  scale_color_manual(values = c(\"Males\" = \"#58c3c3\", \n                                \"Females\" = \"#f08080\")) +\n  scale_y_continuous(breaks = seq(0, 90, by = 10), limits = c(0, 90))+\n  labs(\n    title = \"Age Distribution by Region and Gender\",\n    x = NULL,\n    y = NULL,\n    color = NULL\n  ) +\n  theme_minimal() +\n  common_theme_v3\n\n\np12 &lt;- ggplot(v3_ridges, aes(x = Age, y = fct_rev(Region), \n                             fill = Region)) +\n  geom_density_ridges(scale = 0.9, \n                      alpha = 0.6, \n                      color = \"black\") +\n\n  geom_jitter(data = v3_points,\n              aes(x = Age, \n                  y = Region_numeric + 0.25, \n                  color = Region),\n              height = 0.2, \n              width = 0, \n              size = 0.05, \n              alpha = 0.6,\n              inherit.aes = FALSE) +\n  \n  scale_fill_brewer(palette = \"Set3\") +\n  scale_color_brewer(palette = \"Dark2\") +\n  scale_x_continuous(breaks = seq(0, 90, by = 10), limits = c(0, 90)) + \n  labs(\n    title = \"Age Distribution Across Regions in Singapore\",\n      x = NULL,\n    y = NULL\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = \"none\",\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.title.x = element_text(hjust = 1),\n    plot.title = element_text(face = \"bold\", size = 14),\n  )\n\n\na &lt;- (p9 + p10) / (p11+p12)\na \n\n\n\n\n\n\n\n\n\n\nInsight\n\n\n\n\nThe pie chart in the top-left shows that Singapore’s population is relatively evenly distributed across regions, with the North-East and Central areas having the highest populations, while the North has the smallest.\nThe top-right visualisation displays the age distribution by gender across different regions. The age density curve for the Central region skews noticeably to the right, peaking above age 50, indicating a higher proportion of elderly residents. In the West and North-East, the 25 to 45 age group is more prominent. Across all regions, females aged 75 and above outnumber males, consistent with higher female life expectancy.\nThe bottom-left chart illustrates the age distribution by gender within each region. The Central region stands out as the most aged. The East and North show narrower boxplots, indicating more concentrated age distributions, possibly reflecting more stable and mature communities. Overall, similar interquartile ranges suggest a generally balanced age structure across regions.\nThe bottom-right chart further highlights intra-regional differences, with higher elderly population densities in the Central and Eastern regions. These patterns suggest that although all regions span a wide age range, some may be aging more rapidly, which could influence regional planning and healthcare needs."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Go to Tableau Public"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "In this exercise, we will be tacking Mini-case 3 of VAST Challenge 2025.\n\n\nOver the past decade, the community of Oceanus has faced numerous transformations and challenges evolving from its fishing-centric origins. Following major crackdowns on illegal fishing activities, suspects have shifted investments into more regulated sectors such as the ocean tourism industry, resulting in growing tensions. This increased tourism has recently attracted the likes of international pop star Sailor Shift, who announced plans to film a music video on the island.\nClepper Jessen, a former analyst at FishEye and now a seasoned journalist for the Hacklee Herald, has been keenly observing these rising tensions. Recently, he turned his attention towards the temporary closure of Nemo Reef. By listening to radio communications and utilizing his investigative tools, Clepper uncovered a complex web of expedited approvals and secretive logistics. These efforts revealed a story involving high-level Oceanus officials, Sailor Shift’s team, local influential families, and local conservationist group The Green Guardians, pointing towards a story of corruption and manipulation.\nMy task is to develop new and novel visualizations and visual analytics approaches to help Clepper get to the bottom of this story.\n\n\n\nClepper diligently recorded all intercepted radio communications over the last two weeks. With the help of his intern, they have analyzed their content to identify important events and relationships between key players. The result is a knowledge graph describing the last two weeks on Oceanus. Clepper and his intern have spent a large amount of time generating this knowledge graph, and they would now like some assistance using it to answer the following questions.\n\nClepper found that messages frequently came in at around the same time each day.\n\nDevelop a graph-based visual analytics approach to identify any daily temporal patterns in communications.\nHow do these patterns shift over the two weeks of observations?\nFocus on a specific entity and use this information to determine who has influence over them.\n\nClepper has noticed that people often communicate with (or about) the same people or vessels, and that grouping them together may help with the investigation.\n\nUse visual analytics to help Clepper understand and explore the interactions and relationships between vessels and people in the knowledge graph.\nAre there groups that are more closely associated? If so, what are the topic areas that are predominant for each group?\n\nFor example, these groupings could be related to: Environmentalism (known associates of Green Guardians), Sailor Shift, and fishing/leisure vessels.\n\n\nIt was noted by Clepper’s intern that some people and vessels are using pseudonyms to communicate.\n\nExpanding upon your prior visual analytics, determine who is using pseudonyms to communicate, and what these pseudonyms are.\n\nSome that Clepper has already identified include: “Boss”, and “The Lookout”, but there appear to be many more.\nTo complicate the matter, pseudonyms may be used by multiple people or vessels.\n\nDescribe how your visualizations make it easier for Clepper to identify common entities in the knowledge graph.\nHow does your understanding of activities change given your understanding of pseudonyms?\n\nClepper suspects that Nadia Conti, who was formerly entangled in an illegal fishing scheme, may have continued illicit activity within Oceanus.\n\nThrough visual analytics, provide evidence that Nadia is, or is not, doing something illegal.\nSummarize Nadia’s actions visually. Are Clepper’s suspicions justified?\n\n\n\n\n\nWe will use the dataset provided by VAST Challenge.This report utilizes two core datasets: MC3_graph.json, which encodes the knowledge graph of communications, events, and relationships; and MC3_schema.json, which defines the structure, subtypes, and attributes of each node and edge type within the graph."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#background",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#background",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "Over the past decade, the community of Oceanus has faced numerous transformations and challenges evolving from its fishing-centric origins. Following major crackdowns on illegal fishing activities, suspects have shifted investments into more regulated sectors such as the ocean tourism industry, resulting in growing tensions. This increased tourism has recently attracted the likes of international pop star Sailor Shift, who announced plans to film a music video on the island.\nClepper Jessen, a former analyst at FishEye and now a seasoned journalist for the Hacklee Herald, has been keenly observing these rising tensions. Recently, he turned his attention towards the temporary closure of Nemo Reef. By listening to radio communications and utilizing his investigative tools, Clepper uncovered a complex web of expedited approvals and secretive logistics. These efforts revealed a story involving high-level Oceanus officials, Sailor Shift’s team, local influential families, and local conservationist group The Green Guardians, pointing towards a story of corruption and manipulation.\nMy task is to develop new and novel visualizations and visual analytics approaches to help Clepper get to the bottom of this story."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#tasks-and-questions",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#tasks-and-questions",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "Clepper diligently recorded all intercepted radio communications over the last two weeks. With the help of his intern, they have analyzed their content to identify important events and relationships between key players. The result is a knowledge graph describing the last two weeks on Oceanus. Clepper and his intern have spent a large amount of time generating this knowledge graph, and they would now like some assistance using it to answer the following questions.\n\nClepper found that messages frequently came in at around the same time each day.\n\nDevelop a graph-based visual analytics approach to identify any daily temporal patterns in communications.\nHow do these patterns shift over the two weeks of observations?\nFocus on a specific entity and use this information to determine who has influence over them.\n\nClepper has noticed that people often communicate with (or about) the same people or vessels, and that grouping them together may help with the investigation.\n\nUse visual analytics to help Clepper understand and explore the interactions and relationships between vessels and people in the knowledge graph.\nAre there groups that are more closely associated? If so, what are the topic areas that are predominant for each group?\n\nFor example, these groupings could be related to: Environmentalism (known associates of Green Guardians), Sailor Shift, and fishing/leisure vessels.\n\n\nIt was noted by Clepper’s intern that some people and vessels are using pseudonyms to communicate.\n\nExpanding upon your prior visual analytics, determine who is using pseudonyms to communicate, and what these pseudonyms are.\n\nSome that Clepper has already identified include: “Boss”, and “The Lookout”, but there appear to be many more.\nTo complicate the matter, pseudonyms may be used by multiple people or vessels.\n\nDescribe how your visualizations make it easier for Clepper to identify common entities in the knowledge graph.\nHow does your understanding of activities change given your understanding of pseudonyms?\n\nClepper suspects that Nadia Conti, who was formerly entangled in an illegal fishing scheme, may have continued illicit activity within Oceanus.\n\nThrough visual analytics, provide evidence that Nadia is, or is not, doing something illegal.\nSummarize Nadia’s actions visually. Are Clepper’s suspicions justified?"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#the-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#the-data",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "We will use the dataset provided by VAST Challenge.This report utilizes two core datasets: MC3_graph.json, which encodes the knowledge graph of communications, events, and relationships; and MC3_schema.json, which defines the structure, subtypes, and attributes of each node and edge type within the graph."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#loading-packages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#loading-packages",
    "title": "Take-home Exercise 2",
    "section": "2.1 Loading Packages",
    "text": "2.1 Loading Packages\n\npacman::p_load(\n  jsonlite,\n  tidyverse,\n  ggtext,\n  knitr,\n  lubridate,\n  patchwork,\n  ggraph,\n  tidygraph,\n  igraph,\n  dplyr,\n  ggiraph\n)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#importing-data",
    "title": "Take-home Exercise 2",
    "section": "2.2 Importing data",
    "text": "2.2 Importing data\n\ndata_g &lt;- fromJSON(\"data/MC3_graph.json\")\ndata_s &lt;- fromJSON(\"data/MC3_schema.json\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-overview",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-overview",
    "title": "Take-home Exercise 2",
    "section": "2.3 Data Overview",
    "text": "2.3 Data Overview\n\nsummary(data_g)\n\n           Length Class      Mode   \ndirected    1     -none-     logical\nmultigraph  1     -none-     logical\ngraph       4     -none-     list   \nnodes      31     data.frame list   \nedges       5     data.frame list   \n\n\n\nglimpse(data_g)\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi FALSE\n $ graph     :List of 4\n  ..$ mode        : chr \"static\"\n  ..$ edge_default: Named list()\n  ..$ node_default: Named list()\n  ..$ name        : chr \"VAST_MC3_Knowledge_Graph\"\n $ nodes     :'data.frame': 1159 obs. of  31 variables:\n  ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  ..$ findings         : chr [1:1159] NA NA NA NA ...\n  ..$ content          : chr [1:1159] NA NA NA NA ...\n  ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  ..$ results          : chr [1:1159] NA NA NA NA ...\n  ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  ..$ destination      : chr [1:1159] NA NA NA NA ...\n  ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  ..$ thing_collected  :'data.frame':   1159 obs. of  2 variables:\n  .. ..$ type: chr [1:1159] NA NA NA NA ...\n  .. ..$ name: chr [1:1159] NA NA NA NA ...\n  ..$ reference        : chr [1:1159] NA NA NA NA ...\n  ..$ date             : chr [1:1159] NA NA NA NA ...\n  ..$ time             : chr [1:1159] NA NA NA NA ...\n  ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  ..$ operational_role : chr [1:1159] NA NA NA NA ...\n $ edges     :'data.frame': 3226 obs. of  5 variables:\n  ..$ id         : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  ..$ source     : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  ..$ target     : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  ..$ type       : chr [1:3226] NA \"sent\" NA NA ...\n\n\n\nnodes &lt;- data_g$nodes\nedges &lt;- data_g$edges"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#section",
    "title": "Take-home Exercise 2",
    "section": "3.1",
    "text": "3.1\n\nnodes &lt;- nodes %&gt;%\n  mutate(\n    timestamp = ymd_hms(timestamp, quiet = TRUE),\n    date = ymd(date, quiet = TRUE),\n    start_date = ymd(start_date, quiet = TRUE),\n    end_date = ymd(end_date, quiet = TRUE),\n    submission_date = ymd(submission_date, quiet = TRUE)\n  )\n\n\nglimpse(nodes)\n\nRows: 1,159\nColumns: 31\n$ type              &lt;chr&gt; \"Entity\", \"Entity\", \"Entity\", \"Entity\", \"Entity\", \"E…\n$ label             &lt;chr&gt; \"Sam\", \"Kelly\", \"Nadia Conti\", \"Elise\", \"Liam Thorne…\n$ name              &lt;chr&gt; \"Sam\", \"Kelly\", \"Nadia Conti\", \"Elise\", \"Liam Thorne…\n$ sub_type          &lt;chr&gt; \"Person\", \"Person\", \"Person\", \"Person\", \"Person\", \"P…\n$ id                &lt;chr&gt; \"Sam\", \"Kelly\", \"Nadia Conti\", \"Elise\", \"Liam Thorne…\n$ timestamp         &lt;dttm&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ monitoring_type   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ findings          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ content           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ assessment_type   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ results           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ movement_type     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ destination       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ enforcement_type  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ outcome           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ activity_type     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ participants      &lt;int&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ thing_collected   &lt;df[,2]&gt; &lt;data.frame[26 x 2]&gt;\n$ reference         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ date              &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ time              &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ friendship_type   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ permission_type   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ start_date        &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ end_date          &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ report_type       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ submission_date   &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ jurisdiction_type &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ authority_level   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ coordination_type &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ operational_role  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n\n\n\ncomm_nodes &lt;- nodes %&gt;%\n  filter(sub_type == \"Communication\", !is.na(timestamp)) %&gt;%\n  mutate(\n    date = as.Date(timestamp),\n    hour = hour(timestamp),\n    weekday = wday(timestamp, label = TRUE)\n  )\n\n\npp1 &lt;- comm_nodes %&gt;%\n  count(date, hour) %&gt;%\n  ggplot(aes(x = hour, y = n, group = date, color = date)) +\n  geom_line(size = 1) +\n  labs(title = \"Hourly Communication Patterns per Day\",\n       x = \"Hour of Day\", y = \"Number of Messages\") +\n  theme_minimal()\n\n\npp2 &lt;- comm_nodes %&gt;%\n  count(date, hour) %&gt;%\n  ggplot(aes(x = date, y = hour, fill = n)) +\n  geom_tile(color = \"white\") +\n  scale_fill_viridis_c(option = \"C\") +\n  labs(title = \"Message Volume Heatmap\",\n       x = \"Date\", y = \"Hour\", fill = \"Count\") +\n  theme_minimal()\n\n\n# 加载必要的包\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(jsonlite)\n\n\n# 数据清洗与处理\nnodes &lt;- nodes %&gt;%\n  mutate(\n    timestamp = ymd_hms(timestamp, quiet = TRUE),\n    date = as.Date(timestamp),\n    hour = hour(timestamp),\n    weekday = wday(timestamp, label = TRUE)\n  )\n\n# 过滤通信类事件\ncomm_nodes &lt;- nodes %&gt;%\n  filter(sub_type == \"Communication\", !is.na(timestamp))\n\n# 聚合每小时通信数量\nhourly_counts &lt;- comm_nodes %&gt;%\n  group_by(date, hour) %&gt;%\n  summarise(count = n(), .groups = \"drop\")\n\n# 画图：以小时为 X 轴，每天为不同颜色\npp3 &lt;- ggplot(hourly_counts, aes(x = factor(hour), y = count, fill = factor(date))) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(\n    title = \"Hourly Communication Volume by Date\",\n    x = \"Hour of Day (0–23)\",\n    y = \"Number of Communications\",\n    fill = \"Date\"\n  \n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n\n\n# 提取 communication 相关边\nsent_edges &lt;- edges %&gt;%\n  filter(type == \"sent\") %&gt;%\n  select(source_entity = source, event = target)\n\nreceived_edges &lt;- edges %&gt;%\n  filter(type == \"received\") %&gt;%\n  select(event = source, target_entity = target)\n\n# 合并 sent 和 received，通过事件 ID 连接发送者和接收者\ncomm_edges &lt;- sent_edges %&gt;%\n  inner_join(received_edges, by = \"event\") %&gt;%\n  select(source = source_entity, target = target_entity)\n\n# 过滤合法实体节点\nentity_nodes &lt;- nodes %&gt;%\n  filter(type == \"Entity\") %&gt;%\n  select(id, label)\n\n# 构建图：只包括实体间的通信图\ncomm_graph &lt;- tbl_graph(nodes = entity_nodes, edges = comm_edges, directed = TRUE)\n\n# 计算中心性作为影响力指标\ncomm_graph &lt;- comm_graph %&gt;%\n  mutate(\n    degree = centrality_degree(mode = \"in\"),\n    pagerank = centrality_pagerank()\n  )\n\n# 选择关注对象\nfocus_entity &lt;- \"Boss\"\n\n# 查找该人物在图中的索引\nfocus_index &lt;- which(V(comm_graph)$label == focus_entity)\n\n# 提取 ego graph（1阶邻居）\nego_graph &lt;- make_ego_graph(comm_graph, order = 1, nodes = focus_index, mode = \"all\")[[1]]\n\n# 绘图\npp4 &lt;- ggraph(ego_graph, layout = \"fr\") +\n  geom_edge_link(arrow = arrow(length = unit(3, 'mm')), end_cap = circle(3, 'mm')) +\n  geom_node_point(aes(size = pagerank), color = \"steelblue\") +\n  geom_node_text(aes(label = label), repel = TRUE) +\n  labs(title = paste(\"Influence Network for:\", focus_entity)) +\n  theme_graph()\n\n\n(pp1+pp2)/pp3/pp4"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 5–MC1 Kickstarter",
    "section": "",
    "text": "By the end of this handson exercise, I will be able to:\nimport Mini case 1 data file R object, split the knowledge graph into nodes and edges tibble data frames, tidy nodes and edges tibble data frames for conforming to the requirements of tidygraph, create a tidygrpah object by using the tidied nides and edges, and visualise the tidygraph"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "",
    "text": "By the end of this hands-on exercise you will be able create the followings data visualisation by using R packages:\n\nplotting a calender heatmap by using ggplot2 functions,\nplotting a cycle plot by using ggplot2 function,\nplotting a slopegraph\nplotting a horizon chart\n\nIn this section, I will learn how to plot a calender heatmap programmatically by using ggplot2 package.\nBy the end of this section, I will be able to:\n\nplot a calender heatmap by using ggplot2 functions and extension,\nto write function using R programming,\nto derive specific date and time related field by using base R and lubridate packages\nto perform data preparation task by using tidyr and dplyr packages."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-deriving-weekday-and-hour-of-day-fields",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-deriving-weekday-and-hour-of-day-fields",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 1: Deriving weekday and hour of day fields",
    "text": "Step 1: Deriving weekday and hour of day fields\nBefore I can plot the calender heatmap, two new fields namely wkday and hour need to be derived. In this step, we will write a function to perform the task.\n\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n}\n\n\n\n\n\n\n\nNote\n\n\n\n\nymd_hms() and hour() are from lubridate package, and\nweekdays() is a base R function."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-deriving-the-attacks-tibble-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-deriving-the-attacks-tibble-data-frame",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 2: Deriving the attacks tibble data frame",
    "text": "Step 2: Deriving the attacks tibble data frame\n\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\n\n\n\n\n\n\nNote\n\n\n\nBeside extracting the necessary data into attacks data frame, mutate() of dplyr package is used to convert wkday and hour fields into factor so they’ll be ordered when plotting"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-3-data-structure-after-prepare",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-3-data-structure-after-prepare",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 3: Data structure after prepare",
    "text": "Step 3: Data structure after prepare\nTable below shows the tidy tibble table after processing.\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-deriving-attack-by-country-object",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-deriving-attack-by-country-object",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 1: Deriving attack by country object",
    "text": "Step 1: Deriving attack by country object\nIn order to identify the top 4 countries with the highest number of attacks, I will do the followings:\n\ncount the number of attacks by country,\ncalculate the percent of attackes by country, and\nsave the results in a tibble data frame.\n\n\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-preparing-the-tidy-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-preparing-the-tidy-data-frame",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 2: Preparing the tidy data frame",
    "text": "Step 2: Preparing the tidy data frame\nIn this step, I am required to extract the attack records of the top 4 countries from attacks data frame and save the data in a new tibble data frame (i.e. top4_attacks).\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-3-plotting-the-multiple-calender-heatmap-by-using-ggplot2-package.",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-3-plotting-the-multiple-calender-heatmap-by-using-ggplot2-package.",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 3: Plotting the Multiple Calender Heatmap by using ggplot2 package.",
    "text": "Step 3: Plotting the Multiple Calender Heatmap by using ggplot2 package.\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-data-import",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-data-import",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 1: Data Import",
    "text": "Step 1: Data Import\nFor the purpose of this hands-on exercise, arrivals_by_air.xlsx will be used.\nThe code chunk below imports arrivals_by_air.xlsx by using read_excel() of readxlpackage and save it as a tibble data frame called air.\n\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-deriving-month-and-year-fields",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-deriving-month-and-year-fields",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 2: Deriving month and year fields",
    "text": "Step 2: Deriving month and year fields\nNext, two new fields called month and year are derived from Month-Year field.\n\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-3-extracting-the-target-country",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-3-extracting-the-target-country",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 3: Extracting the target country",
    "text": "Step 3: Extracting the target country\nNext, the code chunk below is use to extract data for the target country (i.e. Vietnam)\n\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-4-computing-year-average-arrivals-by-month",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-4-computing-year-average-arrivals-by-month",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 4: Computing year average arrivals by month",
    "text": "Step 4: Computing year average arrivals by month\nThe code chunk below uses group_by() and summarise() of dplyr to compute year average arrivals by month.\n\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-5-plotting-the-cycle-plot",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-5-plotting-the-cycle-plot",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 5: Plotting the cycle plot",
    "text": "Step 5: Plotting the cycle plot\nThe code chunk below is used to plot the cycle plot as shown in Slide 12/23.\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-data-import-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-data-import-1",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 1: Data Import",
    "text": "Step 1: Data Import\nImport the rice data set into R environment by using the code chunk below.\n\nrice &lt;- read_csv(\"data/rice.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-plotting-the-slopegraph",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-plotting-the-slopegraph",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Step 2: Plotting the slopegraph",
    "text": "Step 2: Plotting the slopegraph\nNext, code chunk below will be used to plot a basic slopegraph as shown below.\n\nrice %&gt;%\n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Dr. Kam Tin Seong\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#initial-eda",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#initial-eda",
    "title": "In-class Exercise 5–MC1 Kickstarter",
    "section": "Initial EDA",
    "text": "Initial EDA\nIt is time for us to apply appropriate EDA methods to examine the data.\nIn this code chunk below, ggplot2 functions are used the reveal the frequency distribution of Edge Type field of edges_tbl.\n\nggplot(data = edges_tbl,\n       aes(y = `Edge Type`))+\n  geom_bar()\n\n\n\n\n\n\n\n\nOn the other hands, code chunk below uses ggplot2 functions to reveal the frequency distribution of Node Type field of nodes_tbl.\n\nggplot(data = nodes_tbl,\n       aes(y = `Node Type`))+\n  geom_bar()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step1-mapping-from-node-id-to-row-index",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step1-mapping-from-node-id-to-row-index",
    "title": "In-class Exercise 5–MC1 Kickstarter",
    "section": "step1 mapping from node id to row index",
    "text": "step1 mapping from node id to row index\nBefore we can go ahead to build the tidygraph object, it is important for us to ensures each id from the node list is mapped to the correct row number. This requirement can be achive by using the code chunk below.\n\nid_map &lt;- tibble(id=nodes_tbl$id,\n                 index = seq_len(\n                   nrow(nodes_tbl)\n                 ))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step-2-map-source-and-target-ids-to-row-indices",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step-2-map-source-and-target-ids-to-row-indices",
    "title": "In-class Exercise 5–MC1 Kickstarter",
    "section": "step 2 map source and target IDs to row indices",
    "text": "step 2 map source and target IDs to row indices\nNext, we will map the source and the target IDs to row indices by using the code chunk below.\n\nedges_tbl &lt;- edges_tbl %&gt;%\n  left_join(id_map , by = c(\"source\" = \"id\")) %&gt;%\n  rename(from = index) %&gt;%\n  left_join(id_map, by=c(\"target\" = \"id\")) %&gt;%\n  rename(to = index)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step-3-filter-out-any-unmatched",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step-3-filter-out-any-unmatched",
    "title": "In-class Exercise 5–MC1 Kickstarter",
    "section": "step 3 filter out any unmatched",
    "text": "step 3 filter out any unmatched\nLastly, the code chunk below will be used to exclude the unmatch edges.\n\nedges_tbl &lt;- edges_tbl %&gt;%\n  filter(!is.na(from),!is.na(to))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step-4-creating-the-graph",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step-4-creating-the-graph",
    "title": "In-class Exercise 5–MC1 Kickstarter",
    "section": "step 4 creating the graph",
    "text": "step 4 creating the graph\nLastly, tbl_graph() is used to create tidygraph’s graph object by using the code chunk below.\n\ngraph &lt;- tbl_graph(nodes = nodes_tbl,\n                   edges = edges_tbl,\n                   directed = kg$directed)\n\nconfirm the output object is indeed in tidygraph format by using the code chunk below.\n\nclass(graph)\n\n[1] \"tbl_graph\" \"igraph\""
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step-1-filtering-edges-to-only-memberof",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step-1-filtering-edges-to-only-memberof",
    "title": "In-class Exercise 5–MC1 Kickstarter",
    "section": "Step 1 : Filtering edges to only “MemberOf”",
    "text": "Step 1 : Filtering edges to only “MemberOf”\n\ngraph_memberof &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  filter(`Edge Type` == \"MemberOf\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step2-extracting-only-connected-nodes-i.e.-used-in-these-edges",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step2-extracting-only-connected-nodes-i.e.-used-in-these-edges",
    "title": "In-class Exercise 5–MC1 Kickstarter",
    "section": "step2 Extracting only connected nodes (i.e., used in these edges)",
    "text": "step2 Extracting only connected nodes (i.e., used in these edges)\n\nused_node_indices &lt;- graph_memberof %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist() %&gt;%\n  unique()"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step-3-keeping-only-those-nodes",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step-3-keeping-only-those-nodes",
    "title": "In-class Exercise 5–MC1 Kickstarter",
    "section": "step 3: Keeping only those nodes",
    "text": "step 3: Keeping only those nodes\n\ngraph_memberof &lt;- graph_memberof %&gt;%\n  activate(nodes) %&gt;%\n  mutate(row_id = row_number()) %&gt;%\n  filter(row_id %in% used_node_indices) %&gt;%\n  select(-row_id)  #optional cleanup"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step-4-plotting-the-sub-graph",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#step-4-plotting-the-sub-graph",
    "title": "In-class Exercise 5–MC1 Kickstarter",
    "section": "step 4: Plotting the sub-graph",
    "text": "step 4: Plotting the sub-graph\n\nggraph(graph_memberof, layout = \"fr\") +\n  geom_edge_link(alpha = 0.5, colour = \"gray\") +\n  geom_node_point(aes(color = `Node Type`), size = 1) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 2.5) +\n  theme_void()\n\n\n\n\n\n\n\n\nNotice that the sub-graph above is very clear and the relationship between musical group and person can be visualise easily."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#exploration-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#exploration-1",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Exploration 1",
    "text": "Exploration 1\nSunburst diagram displaying hierarchical visitor arrivals from Vietnam, broken down by year and month.\n\nsunburst_data &lt;- Vietnam %&gt;%\n  mutate(path = paste(year, month, sep = \"-\")) %&gt;%\n  group_by(path) %&gt;%\n  summarise(value = sum(`Vietnam`), .groups = \"drop\")\nsunburst_data$path &lt;- gsub(\"-\", \"-\", sunburst_data$path)\nsunburst(sunburst_data)\n\n\n\n\n\n\n\n\n\n\nLegend"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#exploration-2",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#exploration-2",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Exploration 2",
    "text": "Exploration 2\nHorizon graph visualising monthly visitor arrivals from Vietnam, compressing time-series data into a compact visual form.\n\nVietnam$time &lt;- as.Date(paste(Vietnam$year, Vietnam$month, \"01\", sep = \"-\"), \"%Y-%b-%d\")\n\nhorizonplot(Vietnam$`Vietnam` ~ Vietnam$time,\n            colorkey = TRUE,\n            origin = mean(Vietnam$`Vietnam`),\n            horizonscale = 6,\n            main = \"Horizon Graph of Monthly Visitor Arrivals from Vietnam\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#exploration-3",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#exploration-3",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Exploration 3",
    "text": "Exploration 3\nMulti-series line plot\n\nweekdays &lt;- c(\"Mon\", \"Tues\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\")\nweeks &lt;- paste0(\"Series\", 1:8)\n\nset.seed(123)\ndf &lt;- expand.grid(Day = weekdays, Week = weeks) %&gt;%\n  mutate(Sales = sample(40:120, size = n(), replace = TRUE))\n\ndf$Day &lt;- factor(df$Day, levels = weekdays, ordered = TRUE)\n\nggplot(df, aes(x = Day, y = Sales, group = Week, color = Week)) +\n  geom_line() +\n  geom_point() +\n  labs(\n    title = \"Weekly Sales Pattern by Day of Week\",\n    y = \"Items Sold\", x = NULL\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"right\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#exploration-4",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#exploration-4",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Exploration 4",
    "text": "Exploration 4\nhighlighting two specific country.\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(2005, 2006, 2007, 2008, 2009, 2010)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Countries\",\n                SubTitle = \"2005 to 2010\",\n                Caption = NULL,\n                LineColor = c(\"grey50\", \n                              \"grey50\", \n                              \"grey50\", \n                              \"grey50\",\n                              \"red\",\n                              \"grey50\",\n                              \"#c7c\",\n                              \"grey50\",\n                              \"grey50\",\n                              \"grey50\",\n                              \"grey50\"),      \n                DataLabelFillColor = \"#f5f5f5\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#exploration-5",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#exploration-5",
    "title": "Hand-on Exercise 6 — Visualising and Analysing Time-oriented Data",
    "section": "Exploration 5",
    "text": "Exploration 5\nBump chart displaying relative ranking changes in rice yield among countries from 2000 to 2010.\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(2000, 2005, 2010)) %&gt;%\n  ggplot(aes(x = Year,\n         y = Yield,\n         color = Country))+\n  geom_point(color = \"#FFFFFF\", size = 1) +\n  ggbump::geom_bump(mapping=aes(x = Year,\n                                y = Yield, \n                                group = Country\n                                ))+\n  labs(title = \"Rice Yield of Top 11 Asian Countries\") +  \n  theme_minimal()"
  }
]