---
title: "Hand-on Exercise 1"
author: "Li Yuquan"
---

# Getting Started

## Install and launching R packages

The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.

```{r}
pacman::p_load(tidyverse)
```

## Importing the data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

# Plotting a simple bar chart

```{r}
ggplot(data = exam_data,
       aes(x = RACE)) +
  geom_bar()
```

# Introducing ggplot

## R Graphics VS ggplot

```{r}
hist(exam_data$MATHS)
```

```{r}
ggplot(data=exam_data, aes(x = MATHS)) +
  geom_histogram(bins=10, 
                 boundary = 100,
                 color="yellow", 
                 fill="red") +
  ggtitle("Distribution of Maths scores")
```

## Essential Grammatical Elements in ggplot2: data

```{r}
ggplot(data=exam_data)
```

## Essential Grammatical Elements in ggplot2: Aesthetic mappings

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS))
```

## Geometric Objects: geom_bar

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()
```

## Geometric Objects: geom_dotplot

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(dotsize = 0.5)
```

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(binwidth=2.5,         
               dotsize = 0.5) +      
  scale_y_continuous(NULL,           
                     breaks = NULL)  
```

## Geometric Objects: geom_histogram()

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_histogram()       
```

## Modifying a geometric object by changing geom()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20,            
                 color="black",      
                 fill="light blue")  
```

## Modifying a geometric object by changing aes()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           fill = GENDER)) +
  geom_histogram(bins=20, 
                 color="grey30")
```

## Geometric Objects: geom-density()

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_density()           
```

```{r}
ggplot(data=exam_data,
       aes(x=MATHS,
          color = GENDER)) +
  geom_density()
```

## Geometric Objects: geom_boxplot

```{r}
ggplot(data = exam_data,
       aes(y = MATHS,
           x = GENDER)) +
  geom_boxplot()
```

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER))+
  geom_boxplot(notch = TRUE)
```

## Geometric Objects: geom_violin

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_violin()
```

## Geometric Objects: geom_point()

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=ENGLISH))+
  geom_point()
```

## geom objects can be combined

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER)) +
  geom_boxplot() +
  geom_point(position = "jitter",
             size=0.5)
```

# Essential Grammatical Elements in ggplot2: stat

## Working with stat()

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,x=GENDER)) +
  geom_boxplot()
```

## Working with stat - the stat_summary() method

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER))+
  geom_boxplot() +
  stat_summary(geom = "point",
               fun = "mean",
               colour="red",
               size=4)
```

## Working with stat - the geom() method

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER)) +
  geom_boxplot() +
  geom_point(stat="summary",
             fun="mean",
             colour="red",
             size=4)
```

## Adding a best fit curve on a scatterplot

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=ENGLISH))+
  geom_point() +
  geom_smooth(size=0.5)
```

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=ENGLISH)) +
  geom_point()+
  geom_smooth(method = lm,
              size=0.5)
```

# Essential Grammatical Elements in ggplot2: Facets

## Working with facet_wrap()

```{r}
ggplot(data=exam_data,
       aes(x=MATHS)) +
  geom_histogram(bins = 20) +
  facet_wrap(~ CLASS)
```

## facet_grid() function

```{r}
ggplot(data = exam_data,
       aes(x=MATHS)) +
  geom_histogram(bins = 20) +
  facet_grid(~ CLASS)
```

# Essential Grammatical Elements in ggplot2: Coordinates

## Working with Coordinate

```{r}
ggplot(data= exam_data,
       aes(x=RACE)) +
  geom_bar()
```

```{r}
ggplot(data = exam_data,
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()
```

## Changing the y- and x-axis range

```{r}
ggplot(data=exam_data,
       aes(x=MATHS,y=ENGLISH)) +
  geom_point()+
  geom_smooth(method = lm, size=0.5)
```

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))
```

# Essential Grammatical Elements in ggplot2: themes

## Working with theme

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_gray()
```

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_classic()
```

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_minimal()
```

