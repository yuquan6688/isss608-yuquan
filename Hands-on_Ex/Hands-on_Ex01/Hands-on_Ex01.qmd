---
title: "Hand-on Exercise 1"
author: "Li Yuquan"
---

# Getting Started

## Install and launching R packages

The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.

```{r}
pacman::p_load(tidyverse)
```

## Importing the data

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

# Plotting a simple bar chart

```{r}
ggplot(data = exam_data,
       aes(x = RACE)) +
  geom_bar()
```

# Introducing ggplot

## R Graphics VS ggplot

```{r}
hist(exam_data$MATHS)
```

```{r}
ggplot(data=exam_data, aes(x = MATHS)) +
  geom_histogram(bins=10, 
                 boundary = 100,
                 color="yellow", 
                 fill="red") +
  ggtitle("Distribution of Maths scores")
```

# Essential Grammatical Elements in ggplot2: data

```{r}
ggplot(data=exam_data)
```

# Essential Grammatical Elements in ggplot2: Aesthetic mappings

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS))
```

# Essential Grammatical Elements in ggplot2: geom

## Geometric Objects: geom_bar

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar()
```

## Geometric Objects: geom_dotplot

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(dotsize = 0.5)
```

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_dotplot(binwidth=2.5,         
               dotsize = 0.5) +      
  scale_y_continuous(NULL,           
                     breaks = NULL)  
```

## Geometric Objects: geom_histogram()

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_histogram()       
```

## Modifying a geometric object by changing geom()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS)) +
  geom_histogram(bins=20,            
                 color="black",      
                 fill="light blue")  
```

## Modifying a geometric object by changing aes()

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, 
           fill = GENDER)) +
  geom_histogram(bins=20, 
                 color="grey30")
```

## Geometric Objects: geom-density()

```{r}
ggplot(data=exam_data, 
       aes(x = MATHS)) +
  geom_density(color="cyan")           
```

```{r}
ggplot(data=exam_data,
       aes(x=MATHS,
          color = GENDER)) +
  geom_density()
```

### Color scheme improvement--geom-density()

```{r}
ggplot(data = exam_data,
       aes(x = MATHS,
           fill = GENDER,
           color = GENDER)) +
  geom_density(size = 2,
               alpha = 0.6) +
  scale_color_manual(values = c("Female" = "#1F77B4", "Male" = "#2CA02C")) +
  scale_fill_manual(values = c("Female" = "#1F77B4", "Male" = "#2CA02C")) +
  labs(x = "Maths Score",
       y = "Density",
       title = "Density of Maths Score by Gender") +
  theme(
    plot.background = element_rect(fill = "#f5f5f5", colour = "#f5f5f5"),
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5)
  )
```

## Geometric Objects: geom_boxplot

```{r}
ggplot(data = exam_data,
       aes(y = MATHS,
           x = GENDER)) +
  geom_boxplot()
```

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER))+
  geom_boxplot(notch = TRUE)
```

## Geometric Objects: geom_violin

```{r}
ggplot(data=exam_data, 
       aes(y = MATHS, 
           x= GENDER)) +
  geom_violin()
```

## Geometric Objects: geom_point()

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=ENGLISH))+
  geom_point()
```

## geom objects can be combined

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER)) +
  geom_boxplot() +
  geom_point(position = "jitter",
             size=0.5)
```

# Essential Grammatical Elements in ggplot2: stat

## Working with stat()

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,x=GENDER)) +
  geom_boxplot()
```

## Working with stat - the stat_summary() method

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER))+
  geom_boxplot() +
  stat_summary(geom = "point",
               fun = "mean",
               colour="red",
               size=4)
```

## Working with stat - the geom() method

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=GENDER)) +
  geom_boxplot() +
  geom_point(stat="summary",
             fun="mean",
             colour="skyblue1",
             size=4)
```

## Adding a best fit curve on a scatterplot

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=ENGLISH))+
  geom_point() +
  geom_smooth(size=0.5)
```

```{r}
ggplot(data=exam_data,
       aes(y=MATHS,
           x=ENGLISH)) +
  geom_point()+
  geom_smooth(method = lm,
              size=0.5)
```

# Essential Grammatical Elements in ggplot2: Facets

## Working with facet_wrap()

```{r}
ggplot(data=exam_data,
       aes(x=MATHS)) +
  geom_histogram(bins = 20) +
  facet_wrap(~ CLASS)
```

## facet_grid() function

```{r}
ggplot(data = exam_data,
       aes(x=MATHS)) +
  geom_histogram(bins = 20) +
  facet_grid(~ CLASS)
```

# Essential Grammatical Elements in ggplot2: Coordinates

## Working with Coordinate

```{r}
ggplot(data= exam_data,
       aes(x=RACE)) +
  geom_bar()
```

```{r}
ggplot(data = exam_data,
       aes(x=RACE)) +
  geom_bar() +
  coord_flip()
```

## Changing the y- and x-axis range

```{r}
ggplot(data=exam_data,
       aes(x=MATHS,y=ENGLISH)) +
  geom_point()+
  geom_smooth(method = lm, size=0.5)
```

```{r}
ggplot(data=exam_data, 
       aes(x= MATHS, y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100))
```

# Essential Grammatical Elements in ggplot2: themes

## Working with theme

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_gray()
```

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_classic()
```

```{r}
ggplot(data=exam_data, 
       aes(x=RACE)) +
  geom_bar() +
  coord_flip() +
  theme_minimal()
```

# Exploration

1.  When plotting faceted histograms, an additional dimension is introduced for comparative analysis.

```{r}
ggplot(exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20) +
  facet_grid(GENDER ~ CLASS)
```

2.  Color Names Reference Chart

```{r echo=FALSE}
color_names <- colors()
set.seed(123)  
sampled_colors <- sample(color_names, 60)  

color_df <- data.frame(
  color_name = sampled_colors,
  x = rep(1:3, 20),
  y = rep(20:1, each = 3)
)

ggplot(color_df, aes(x = x, y = y)) +
  geom_tile(aes(fill = color_name), color = "white", width = 0.9, height = 0.9) +
  geom_text(aes(label = color_name), 
            size = 3, 
            angle = 0, 
            hjust = 0.5, 
            vjust = 0.5) +
  scale_fill_manual(values = setNames(sampled_colors, sampled_colors)) +
  theme_void() +
  theme(legend.position = "none") 
```

3.  Interactive Scatter Plot

```{r}
pacman::p_load(plotly)

p <- ggplot(data=exam_data, aes(x = ENGLISH, y = MATHS, color = GENDER)) +
  geom_point()

ggplotly(p)
```

4.  Interactive histogram chart

```{r}
p <- ggplot(exam_data, aes(x = ENGLISH)) +
  geom_histogram(binwidth=10, color= "cyan4")
ggplotly(p)
```

5.  Add data labels in the histograms chart

```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, color = "cyan2", fill = "light blue") +
  stat_bin(bins = 20,
           geom = "text",
           aes(label = after_stat(count)),
           vjust = -0.2, 
           color = "tan1",
           size = 4)
```
