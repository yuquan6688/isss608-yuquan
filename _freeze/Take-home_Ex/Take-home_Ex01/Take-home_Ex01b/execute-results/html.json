{
  "hash": "08b63932bc79e5de0f485ccfd51b1108",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1--Phase 2\"\nsubtitle: \"Evaluation and improvement of classmates' visual works\"\nauthor: \"Li Yuquan\"\ndescription: \"\"\ndate: \"April 30, 2025\"\ndate-modified: \"May 4, 2025\"\nformat: html\nimage: images/fm.png\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# 1 Overview\n\nFor the second phase of Take-home Exercise 1, we are required to critically review a data visualization submitted by one of our classmates. This involves identifying and explaining three effective design principles demonstrated in their work, as well as highlighting three areas for potential improvement. Based on this critique, we are expected to develop a revised or “makeover” version of their visualization that addresses the identified weaknesses while preserving the original message and intent.\n\nIn this part, I will conduct a critical analysis of the visualization submitted by my classmate [**Tai Qiuyan**](https://isss608-ay2025-qiuyan.netlify.app/takehome_ex/takehome_ex01/takehome_ex01), discussing three strengths in design and proposing improvements to enhance clarity, effectiveness, and visual communication.\n\n# 2 Load packages and import data\n\n::: panel-tabset\n## Load packages\n\n| name | purpose |\n|-----------------------|-------------------------------------------------|\n| `scales` | Nicely formats axis ticks and legends. |\n| `ggrepel` | Adds non‑overlapping text labels to ggplots. |\n| `patchwork` | Combines multiple ggplots into a single figure. |\n| `ggthemes` | Supplies predefined aesthetic themes. |\n| `hrbrthemes` | Extends ggthemes with modern, typographically friendly themes and font support. |\n| `tidyverse` | Meta‑package that loads ggplot2, dplyr, tidyr, readr, stringr, forcats, etc. — the backbone for data import, transformation, and visualisation. |\n| `tidytext` | Tokenises and analyses text. |\n| `treemapify` | Creates ggplot‑compatible treemaps. |\n| `dplyr` | Provides a fast, consistent, and intuitive set of functions for data manipulation, including filtering, selecting, grouping, summarising, and joining data frames. |\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(scales, ggrepel, patchwork, \n               ggthemes, hrbrthemes,tidyverse, \n               tidytext,treemapify, dplyr, RColorBrewer, grid,gghalves) \n```\n:::\n\n\n\n## Import data\n\nThe code imports the dataset `respopagesex2024.csv` and load the CSV file into a dataframe named `population_data`.\n\nAfter import, the `mutate()` function is applied to convert the `Age` column from character to numeric format.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulation_data <- read_csv(\"data/respopagesex2024.csv\") %>%\n  mutate(Age = as.numeric(Age))\n```\n:::\n\n\n\n## Data overview\n\n `glimpse()` function provides a concise overview of the dataset’s structure, displaying column names, data types, and sample values.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(population_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60,424\nColumns: 6\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  <dbl> 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 1…\n$ Sex  <chr> \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time <dbl> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n```\n\n\n:::\n:::\n\n\n:::\n\n# 3 Original visualization\n\nThe original visualization is from my classmate Tai Qiuyan. Please click on this [**link**](https://isss608-ay2025-qiuyan.netlify.app/takehome_ex/takehome_ex01/takehome_ex01) to view her original visualization report or obtain more information.\n\n## 3.1 Data cleaning and preparation\n\n::: callout-tip\nAll data import, data processing, and variable naming in the original visualisation strictly follow the code submitted by the classmate.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nviolin_data <- population_data %>%\n  mutate(Age = as.numeric(Age)) %>%\n  filter(!is.na(Age), !is.na(PA)) %>%\n  group_by(PA, Age) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %>%\n  uncount(weights = Pop)\n\ntop10_PAs <- population_data %>%\n  group_by(PA) %>%\n  summarise(Total_Pop = sum(Pop), .groups = \"drop\") %>%\n  arrange(desc(Total_Pop)) %>%\n  slice_head(n = 10) %>%\n  pull(PA)\n\nviolin_filtered <- violin_data %>%\n  filter(PA %in% top10_PAs) %>%\n  mutate(PA = factor(PA, levels = top10_PAs))\n\n\ntop20_PAs <- population_data %>%\n  group_by(PA) %>%\n  summarise(Total_Pop = sum(Pop), .groups = \"drop\") %>%\n  arrange(desc(Total_Pop)) %>%\n  slice_head(n = 20) %>%\n  pull(PA)\n\npa_summary20 <- violin_data %>%\n  filter(PA %in% top20_PAs) %>%\n  mutate(AgeGroup = if_else(Age > 65, \"Elderly\", \"Other\")) %>%\n  group_by(PA) %>%\n  summarise(\n    Avg_Age      = mean(Age),\n    Total_Pop    = n(),\n    Elderly_Prop = mean(AgeGroup == \"Elderly\"),\n    .groups      = \"drop\"\n  )\n```\n:::\n\n\n\n## 3.2 Visualization\n:::panel-tabset\n### The Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01b_files/figure-html/unnamed-chunk-5-1.png){width=1344}\n:::\n:::\n\n\n### The Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# palette for all 20 PAs\narea_colors_all <- colorRampPalette(\n  RColorBrewer::brewer.pal(10, \"Set3\")\n)(20)\nnames(area_colors_all) <- top20_PAs\n\n# Violin plot\np1 <- ggplot(violin_filtered, aes(x = PA, y = Age, fill = PA)) +\n  geom_violin(trim = FALSE, scale = \"area\", width = 0.8, alpha = 0.7) +\n  geom_boxplot(width = 0.1, outlier.shape = NA, color = \"black\") +\n  scale_fill_manual(values = area_colors_all[top10_PAs]) +\n  labs(\n    title = \"Age Distribution by Planning Area (Top 10 Residential Areas)\",\n    x     = \"Planning Area\",\n    y     = \"Age\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",\n    axis.text.x     = element_text(angle = 45, hjust = 1),\n    axis.title      = element_text(size = 16),\n    plot.title      = element_text(face = \"bold\", size = 18)\n  )\n\n# Scatter plot\np2 <- ggplot(pa_summary20, aes(\n      x = Total_Pop,\n      y = Avg_Age,\n      size = Elderly_Prop,\n      fill = PA\n    )) +\n  geom_point(shape = 21, alpha = 0.8, color = \"black\") +\n  geom_text_repel(aes(label = PA), size = 4, max.overlaps = 30) +\n  \n  scale_fill_manual(values = area_colors_all, guide = FALSE) +\n  scale_size_continuous(\n    name  = \"Elderly Proportion\",\n    range = c(6, 20)\n  ) +\n  scale_x_continuous(labels = scales::comma) +\n  labs(\n    title = \"Average Age vs. Total Population (Top 20 Planning Areas)\",\n    x     = \"Total Population\",\n    y     = \"Average Age\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"right\",\n    legend.title    = element_text(size = 14),\n    legend.text     = element_text(size = 12),\n    axis.title      = element_text(size = 16),\n    plot.title      = element_text(face = \"bold\", size = 18)\n  )\n\n# combine\n(p2 / p1) + plot_layout(heights = c(1, 0.6))\n```\n:::\n\n\n:::\n# 4 Evaluation and Improvement\n\n## 4.1 Good design principles\n\n      \n1. This visualization effectively integrates total population, average age, and elderly proportion into a single bubble chart, enabling users to compare the scale and aging level of multiple planning areas at a glance through a multidimensional view.\n\n2. The use of consistent and vibrant color schemes across both charts ensures that the same planning areas are easily recognizable, enhancing readability and supporting a visually coherent interpretation across different visual elements.\n\n3. The two charts complement each other: the upper bubble chart provides a macro-level overview of population characteristics, while the lower violin plot reveals detailed age distribution patterns, together offering a more comprehensive and in-depth understanding of demographic structures.\n\n\n## 4.2 Further improvement\n\n        \n1. The y-axis of the violin plot lacks a clear label indicating that it represents age, and the wide scale range (0–75) without finer graduations makes it difficult for viewers to interpret the exact distribution. Adding a descriptive axis title and refining the scale would improve clarity.\n\n2. In the bubble chart, some labels—such as those for Geylang and Serangoon—overlap with the bubbles or appear too densely packed, reducing legibility. This could be improved by repositioning the labels or abbreviating long area names to avoid visual clutter.\n\n3. The violin plot does not include median lines or reference markers such as the age of 65, making it harder to quickly identify central tendencies or distinguish age structure differences across areas. Including such markers and enlarging the box plots would enhance interpretability.\n\n4. The legend for the bubble chart is positioned too close to the bottom chart, disrupting the overall layout balance and drawing attention away from the data. Relocating the legend to the upper-right empty space and resizing it appropriately would create a more harmonious and visually balanced design.\n\n\n## 4.3 Makeover version\n\n### 4.3.1 Data Prepare\n\n:::panel-tabset\n\n### The Description\n\nThe population_data was preprocessed specifically for violin plot visualization, aiming to generate age distribution data grouped by gender, in order to show the age structure of different genders across the top 10 most populous planning areas.\n\n\n### The Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nviolin_gender_split <- population_data %>%\n  filter(PA %in% top10_PAs) %>%\n  mutate(Age = as.numeric(Age)) %>%\n  filter(!is.na(Sex), !is.na(Age)) %>%\n  group_by(PA, Sex, Age) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %>%\n  uncount(weights = Pop) %>%\n  mutate(\n    Sex = factor(Sex, levels = c(\"Females\", \"Males\")),\n    PA = factor(PA, levels = top10_PAs)\n  )\n```\n:::\n\n\n:::\n\n### 4.3.2 Markover Version 1\n\n:::panel-tabset\n\n#### The Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01b_files/figure-html/unnamed-chunk-8-1.png){width=1344}\n:::\n:::\n\n\n\n#### The Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\narea_colors_all <- colorRampPalette(RColorBrewer::brewer.pal(10, \"Set3\"))(20)\nnames(area_colors_all) <- top20_PAs\n\np5 <- ggplot(pa_summary20, aes(x = Total_Pop, \n                               y = Avg_Age, \n                               size = Elderly_Prop)) +\n  geom_point(\n    fill = area_colors_all[pa_summary20$PA],\n    shape = 21,\n    stroke = 0.6,\n    alpha = 0.85,\n    color = \"black\",\n    show.legend = TRUE\n  ) +\n  geom_text_repel(\n    data = subset(pa_summary20, \n                  PA == \"Serangoon\"),\n    aes(label = PA),\n    size = 4,\n    box.padding = 0.5,\n    point.padding = 0.6,\n    segment.color = \"black\",\n    segment.size = 0.6,\n    min.segment.length = 0,\n    force = 4,\n    nudge_y = 0.5,\n    nudge_x = 10000\n  ) +\n  geom_text_repel(\n    data = subset(pa_summary20, \n                  PA != \"Serangoon\"),\n    aes(label = PA),\n    size = 4,\n    box.padding = 0.5,\n    point.padding = 0.5,\n    segment.alpha = 0,\n    force = 3,\n    nudge_y = -0.65\n  ) +\n  scale_size_continuous(\n    name = \"Elderly Proportion\",\n    range = c(6, 20),\n    labels = percent_format(accuracy = 1)\n  ) +\n  geom_vline(xintercept = mean(pa_summary20$Total_Pop), linetype = \"dotted\", color = \"grey50\") +\n  geom_hline(yintercept = mean(pa_summary20$Avg_Age), \n             linetype = \"dotted\", \n             color = \"grey50\") +\n  scale_x_continuous(labels = comma) +\n  labs(\n    title = \"Bubble Chart: Total Population vs. Average Age\",\n    subtitle = \"Bubble = Elderly Rate | Fill = Set3 Color Palette | Dashed lines = Mean\",\n    x = \"Total Population\",\n    y = \"Average Age\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = c(0.82, 1.05),\n    legend.direction = \"horizontal\",\n    legend.justification = c(\"right\", \"top\"),\n    legend.key.size = unit(0.8, \"lines\"),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10),\n    axis.title = element_text(size = 16),\n    plot.title = element_text(size = 18, face = \"bold\"),\n    plot.subtitle = element_text(size = 13),\n    plot.margin = margin(20, 20, 20, 20)\n  )\n\n\npd <- ggplot(violin_filtered, aes(x = PA, \n                                  y = Age, \n                                  fill = PA)) +\n  geom_violin(trim = FALSE, \n              scale = \"area\", \n              width = 0.8, \n              alpha = 0.7) +\n  geom_boxplot(width = 0.2, \n               outlier.shape = NA, \n               color = \"black\", \n               linewidth = 0.6) +\n  stat_summary(\n    fun = median,\n    geom = \"text\",\n    aes(label = round(..y.., 0)),\n    color = \"black\",\n    size = 3.5,\n    vjust = -1.5\n  ) +\n  geom_hline(yintercept = 65, \n             linetype = \"dashed\", \n             color = \"darkred\", \n             linewidth = 0.6) +\n  scale_fill_brewer(palette = \"Pastel1\") +\n  scale_y_continuous(\n    limits = c(0, 100),\n    breaks = seq(0, 100, by = 10)\n  ) +\n  labs(\n    title = \"Age Distribution Across Top 10 Residential Planning Areas (2024)\",\n    subtitle = \"Black number: Median Age | Dashed line: Age 65 (Elderly Threshold)\",\n    x = \"Planning Area\",\n    y = \"Resident Age (Years)\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",\n    axis.text.x = element_text(angle = 45, \n                               hjust = 1),\n    axis.title = element_text(size = 16),\n    plot.title = element_text(face = \"bold\", \n                              size = 18),\n    plot.subtitle = element_text(size = 13, \n                                 margin = margin(b = 10))\n  )\n\n(p5 / pd) + plot_layout(heights = c(1, 0.6))\n```\n:::\n\n\n:::\n\n\n### 4.3.3 Markover Version 2\n\n:::panel-tabset\n\n#### The Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01b_files/figure-html/unnamed-chunk-10-1.png){width=1344}\n:::\n:::\n\n\n\n\n#### The Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax_pop <- max(pa_summary20$Total_Pop)\n\npb <- ggplot(pa_summary20, aes(x = PA)) +\n  geom_col(aes(y = Total_Pop), fill = \"skyblue\", \n           width = 0.6) +\n  geom_line(aes(y = Avg_Age * max_pop / max(pa_summary20$Avg_Age), \n                group = 1), \n            color = \"tomato\", \n            size = 0.5) +\n  geom_point(aes(y = Avg_Age * max_pop / max(pa_summary20$Avg_Age), \n                 fill = Elderly_Prop),\n             shape = 21, size = 5, \n             stroke = 0.4, \n             color = \"black\", \n             alpha = 0.8) +\n  scale_fill_gradient(low = \"lightblue\", \n                      high = \"darkred\", \n                      name = \"Elderly Rate\", \n                      labels = percent) +\n  scale_y_continuous(\n    name = \"Total Population\",\n    labels = comma,\n    sec.axis = sec_axis(~ . * max(pa_summary20$Avg_Age) / max_pop, \n                        name = \"Average Age\")\n  ) +\n  labs(\n    title = \"Population, Average Age (line), and Elderly Rate (dot color)\",\n    x = \"Planning Area\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.title.y.right = element_text(color = \"tomato\"),\n    legend.position = c(0.85, 1.05),\n    legend.direction = \"horizontal\",\n    legend.justification = c(\"right\", \"top\"),\n    legend.key.width = unit(1.2, \"cm\"),\n    legend.key.height = unit(0.4, \"cm\"),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10),\n    plot.margin = margin(20, 20, 20, 20)\n  )\n\n\noffset <- 0.15\n\npa <- ggplot(violin_gender_split, aes(x = PA, \n                                      y = Age, \n                                      fill = Sex)) +\n  geom_half_violin(data = subset(violin_gender_split, \n                                 Sex == \"Males\"),\n                   side = \"l\", \n                   alpha = 0.6, \n                   trim = FALSE, \n                   color = NA, \n                   width = 1.2) +\n  geom_half_violin(data = subset(violin_gender_split, \n                                 Sex == \"Females\"),\n                   side = \"r\", \n                   alpha = 0.6, \n                   trim = FALSE, \n                   color = NA, \n                   width = 1.2) +\n  geom_boxplot(data = subset(violin_gender_split, \n                             Sex == \"Males\"),\n               width = 0.15, \n               outlier.shape = NA, \n               alpha = 0.7,\n               position = position_nudge(x = -offset), \n               color = \"black\") +\n  geom_boxplot(data = subset(violin_gender_split,\n                             Sex == \"Females\"),\n               width = 0.15, outlier.shape = NA, \n               alpha = 0.7,\n               position = position_nudge(x = offset), \n               color = \"black\") +\n  stat_summary(data = subset(violin_gender_split, \n                             Sex == \"Males\"),\n               fun = median, \n               geom = \"text\",\n               aes(label = round(..y.., 0)),\n               position = position_nudge(x = -offset),\n               vjust = -1.2, size = 3.5, \n               color = \"black\") +\n  stat_summary(data = subset(violin_gender_split, \n                             Sex == \"Females\"),\n               fun = median, \n               geom = \"text\",\n               aes(label = round(..y.., 0)),\n               position = position_nudge(x = offset),\n               vjust = -1.2, \n               size = 3.5, \n               color = \"black\") +\n  scale_fill_manual(values = c(\"Males\" = \"#87CEFA\", \n                               \"Females\" = \"#FFB6C1\")) +\n  geom_hline(yintercept = 65, \n             linetype = \"dashed\", \n             color = \"darkred\", \n             linewidth = 0.6) +\n  labs(\n    title = \"Sex-Split Age Distribution by Planning Area\",\n    subtitle = \"Left = Males | Right = Females | Dashed line = Age 65\",\n    x = \"Planning Area\",\n    y = \"Resident Age (Years)\",\n    fill = \"Sex\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    axis.title = element_text(size = 16),\n    plot.title = element_text(size = 18, face = \"bold\"),\n    plot.subtitle = element_text(size = 13),\n    legend.position = \"top\"\n  )\n(pb / pa) + plot_layout(heights = c(1, 0.6))\n```\n:::\n\n\n:::\n",
    "supporting": [
      "Take-home_Ex01b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}